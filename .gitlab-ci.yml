image: registry.gitlab.com/canfd/server-tools/ghdl
before_script:
    - "export PATH=/opt/ghdl/bin:$PATH"
    - export LC_ALL=C.UTF-8
    - export LANG=C.UTF-8
    - export PYTHONUNBUFFERED=1

stages:
    - precheck
    - build
    - test
    - deploy

check_component:
    stage: precheck
    script:
        - scripts/gen_vivado_component.py
        - cd scripts && ./update_reg_map
        - git diff --exit-code || (echo "Vivado component file or register map products are not up-to-date. Either run scripts/gen_vivado_component.py and scripts/update_reg_map or download the files from this job's artifacts."; exit 1)
    artifacts:
        expire_in: 1 week
        paths:
            - src/component.xml
            - doc/core/registerMap.lyx
            - driver/ctu_can_fd_regs.h
            - src/lib/can_fd_register_map.vhd

build_ip_and_tests:
    stage: build
    artifacts:
        paths: &vunit_build_paths
            - test/build
        expire_in: 5 hrs
    script:
        - cd test
        - make elaborate
        # Do not include the huge binaries in artifacts.
        - rm -R build/vunit_out/test_output
    only: &only
        - master     # Run on all changes to master branch
        - tags       # Run on all tags
        - triggers   # Run by trigger (on merge request)
        - web        # Run by manual request from web UI

build_driver:
    stage: build
    only: *only
    script:
        - cd driver
        - "make -j`nproc`"

build_doc:
    stage: build
    only: *only
    image: registry.gitlab.com/canfd/server-tools/lyx
    script:
        - export LC_ALL=en_US.UTF-8
        - export LANG=en_US.UTF-8
        - make -C doc/core
        - make -C doc/driver
    artifacts:
        paths:
            - doc/core/Progdokum.pdf
            - doc/core/ctu_can_fd_architecture.pdf
            - doc/driver/build

build_linux_driver:
    stage: build
    only: *only
    image: registry.gitlab.com/canfd/server-tools/ctucanfd_drvtest
    script:
        - cd driver/linux
        - "make -j`nproc` KDIR=/linux/build"
        - "make checkpatch KDIR=/linux/build"
    artifacts:
        paths:
            - driver/linux/ctucanfd.ko

test_ip_fast:
    stage: test
    only: *only
    dependencies: [build_ip_and_tests]
    script:
        - cd test
        - make test_fast
    artifacts:
        when: always
        paths:
            - test/tests_fast.xml
            - test/xunit.xsl
        reports:
            junit: [test/tests_fast.xml]

test_ip_nightly:
    stage: test
    dependencies: [build_ip_and_tests]
    only:
        - schedules
    script:
        - cd test
        - make test_debug
    after_script:
        - cd test
        - make coverage
        - make functional_coverage
        - cd ../scripts
        - ./gen_vrm
    coverage: "/lines......: ([^%]+%)/"
    artifacts:
        when: always
        paths:
            - test/code_html
            - test/tests_nightly.xml
            - test/xunit.xsl
            - test/build/functional_coverage
            - scripts/VRM.html
        reports:
            junit: [test/tests_nightly.xml]

    # Nightly tests might fail due to randomization. It is not preffered to
    # kill whole follow-up coverage processing due to this failure!
    # Fast pipeline on the other hand can't fail because it must pass before merge!
    allow_failure: true

pages:
    stage: deploy
    when: always
    #dependencies: [test_ip_unit, test_ip_sanity]
    script:
        - mkdir -p public
        - cp test/xunit.xsl public/
        - cp test/tests_*.xml public/
        - mv test/code_html public/coverage || true
        - cp doc/core/Progdokum.pdf public/ || true
        - cp doc/core/ctu_can_fd_architecture.pdf public/ || true
        - cp -R doc/driver/build public/driver_doc || true
        - mkdir public/functional_coverage
        - cp -R test/build/functional_coverage/* public/functional_coverage || true
        - cp scripts/VRM.html public/ || true
    only:
        - master
    artifacts:
        paths:
            - public

variables:
    GIT_SUBMODULE_STRATEGY: recursive
