#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{fancyhdr}
\pagestyle{fancy}
\usepackage{colortbl}
\definecolor{gray}{RGB}{230,230, 230}
\end_preamble
\use_default_options true
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing other 1.1
\use_hyperref true
\pdf_author "Ille Ondrej"
\pdf_subject "CAN FD IP function"
\pdf_keywords "CAN, Flexible data rate,"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 3cm
\headheight 2cm
\secnumdepth -2
\tocdepth 5
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
\size giant
\color black
CTU CAN
\noun on
 FD 
\begin_inset Newline newline
\end_inset

IP core
\noun default
\color inherit
 
\series default
\size default

\begin_inset Newline newline
\end_inset


\series bold
\size larger
\color black

\begin_inset VSpace bigskip
\end_inset


\size default
\noun on
Datasheet
\end_layout

\begin_layout Author

\series bold
\size larger
Ille Ondrej
\series default
\size default

\begin_inset Newline newline
\end_inset


\series bold
\size larger
Martin Jeřábek
\series default
\size default

\begin_inset Newline newline
\end_inset


\begin_inset VSpace defskip
\end_inset

Czech Technical University in Prague
\begin_inset Newline newline
\end_inset

Faculty of Electrical Engineering
\begin_inset Newline newline
\end_inset

Department of Measurement
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename ../pics/LEV.bmp
	lyxscale 20
	scale 60

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Left Header

\size larger
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="top">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell multirow="3" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../pics/LEV.bmp
	lyxscale 20
	scale 9

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
CTU CAN FD IP Core
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand input
filename "version.tex"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Right Header
Ille Ondrej, Martin Jeřábek
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="1.5cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Document Version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Author
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Change description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ondrej Ille
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07-2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial version describing release 1.0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ondrej Ille
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
09-2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Added test framework describtion.
 Updated document to cover latest description of CAN Core.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ondrej Ille
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07-2018
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Updated register map description, external references to generated maps.
 Updated block diagrams.
 Updated test framework description.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Format
\end_layout

\begin_layout Standard
Throughout this manual following notations are kept:
\end_layout

\begin_layout Itemize
Commnon text is written with this font.
\end_layout

\begin_layout Itemize
Registers are always described with capital letters e.g.
 REGISTER or REGISTER [BIT_FIELD] to represent register or bit field within
 a register.
\end_layout

\begin_layout Itemize
VHDL signal names, Entities, Architectures, Generics and FSM States are
 written with Italic and Roman styled letters e.g.
 
\family roman
\shape italic
tran_frame_valid or CAN_top_level.
\end_layout

\begin_layout Itemize
Important facts are emphasized by Bold letters such as: 
\begin_inset Quotes eld
\end_inset

core registers have 
\series bold
asynchronous
\series default
 reset
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
Technical terms referring to CAN FD Standard are described with smaller
 capital letters such as: 
\shape smallcaps
stuff bit
\shape default
 or
\shape smallcaps
 error frame.
\end_layout

\begin_layout Itemize
Note that block diagrams within the documentation does not contain exact
 names of signals or FSM States.
 Most of the pictures are ilustrational and exact name of VHDL signal is
 explained in the text.
\end_layout

\begin_layout Chapter
1.
 Introduction
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

 
\backslash
thispagestyle{fancy}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This document describes the CTU CAN FD IP Core originally developed at Departmen
t of Measurement at Faculty of Electrical Engineering at Czech Technical
 University for purpose of testing CAN Bus.
 The core supports ISO as well as NON-ISO variants of CAN FD protocol.
 The core contains own test framework and extensive set of RTL tests.
 Low-level C driver with OS/CPU independent driver and Socket CAN Linux
 driver are available.
 Project contains several scripts for design automation and CAN testing
 purposes such as IP - XACT register map generator and KvaAlt (Kvaser /
 Altera) Logger.
\end_layout

\begin_layout Section
1.1 Functionality requirements
\end_layout

\begin_layout Standard
The implementation of the CAN Core was driven by following design requirements:
\end_layout

\begin_layout Enumerate
Implement CAN FD protocol according to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

.
 Additionally implement ISO FD protocol.
 ISO or Non-ISO protocol can be switched by a configuration bit in a memory
 map of IP Core.
\end_layout

\begin_layout Enumerate
Provide 
\begin_inset Quotes eld
\end_inset

Logical Link Control
\begin_inset Quotes erd
\end_inset

 extension of MAC layer.
 It enables sending and receiving frames by manipulation with buffers (instead
 of direct manipulation with CAN state machine).
 This approach simplifies firmware implementation.
\end_layout

\begin_layout Enumerate
Be able to capture external time stamp when received frame is stored in
 a buffer, as well as start transmitting a frame when specific value of
 external time stamp is reached.
\end_layout

\begin_layout Enumerate
Record various events on the bus along with time stamp.
\end_layout

\begin_layout Enumerate
After a frame is inserted with specified transmission time, provide information
 when it was truly sent.
\end_layout

\begin_layout Enumerate
Be able, to trigger event recording (point 4) by a specific event on the
 bus.
\end_layout

\begin_layout Enumerate
Be able to manipulate Fault confinement state and counters (see 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

 for details).
\end_layout

\begin_layout Section
1.1 IP Core features
\end_layout

\begin_layout Itemize
Vendor independent, fully synthesizable VHDL RTL code.
\end_layout

\begin_layout Itemize
RTL test framework wrapped in VUnit wrappers and simulations executable
 via GHDL or Modelsim.
 Code coverage available via gcov engine.
\end_layout

\begin_layout Itemize
Example project of Synthesis in Xilinx Vivado and Intel Quartus Prime.
\end_layout

\begin_layout Itemize
Low level driver and Linux Socket CAN driver.
\end_layout

\begin_layout Itemize
Support of ISO and Non-ISO CAN FD protocol.
\end_layout

\begin_layout Itemize
SDC and XDC design constraints for synthesis to Altera and Xilinx FPGAs.
\end_layout

\begin_layout Section
1.2 License
\end_layout

\begin_layout Standard
CTU_CAN_FD IP core is published under MIT License:
\end_layout

\begin_layout Quote
Permission is hereby granted, free of charge, to any person obtaining a
 copy of this software and associated documentation files (the "Software"),
 to deal in the Software without restriction, including without limitation
 the rights to use, copy, modify, merge, publish, distribute, sublicense,
 and/or sell copies of the Software, and to permit persons to whom the Software
 is furnished to do so, subject to the following conditions:
\end_layout

\begin_layout Quote
The above copyright notice and this permission notice shall be included
 in all copies or substantial portions of the Software.
\end_layout

\begin_layout Quote
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE
, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 OTHER DEALINGS IN THE SOFTWARE.
\end_layout

\begin_layout Standard
Linux driver and low level driver are published under GPL v 2.0:
\end_layout

\begin_layout Quote
This program is free software; you can redistribute it and/or * modify it
 under the terms of the GNU General Public License as published by the Free
 Software Foundation; either version 2 of the License, or (at your option)
 any later version.
 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
 You should have received a copy of the GNU General Public License along
 with this program; if not, write to the Free Software Foundation, Inc.,
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 
\end_layout

\begin_layout Section
1.3 Development tools
\end_layout

\begin_layout Standard
To develop this IP Core following tools are used:
\end_layout

\begin_layout Itemize
ModelSim ALTERA Edition 6.5b and GHDL for RTL simulatons
\end_layout

\begin_layout Itemize
Quartus Prime and Xilinx Vivado for Synthesis to Intel and Xilinx FPGAs,
 Timing analysis and design size benchmarks.
\end_layout

\begin_layout Itemize
VUnit for simulation wrappers.
\end_layout

\begin_layout Itemize
Kactus2 for definition of register map in IP-XACT format.
\end_layout

\begin_layout Itemize
\SpecialChar LyX
 v.2.1.2 to write documentation.
\end_layout

\begin_layout Itemize
GitLab of CTU FEE as a remote GIT repository.
\end_layout

\begin_layout Itemize
TimingAnalyzer SW for Timing Diagrams.
\end_layout

\begin_layout Section
1.4 Design automatization
\end_layout

\begin_layout Standard
To ease the IP development of the CTU CAN FD IP core, to achieve scalability
 and maintainability of the design, part of the IP Core design is auto-generated.
 Register map is implemented in Kactus 2 in IP-XACT format.
 The design in IP–XACT format is considered to be unified specification
 of user–interface.
 Following design resources are generated from the IP-XACT specification:
\end_layout

\begin_layout Itemize
VHDL packages with address, bit-fields and reset values definitions.
\end_layout

\begin_layout Itemize
C header file with address map definitions and register descriptions.
\end_layout

\begin_layout Itemize
Lyx documentation.
 Chapters 3 and 4 are generated.
\end_layout

\begin_layout Standard
To generate these design materials CTU CAN FD IP Core contains own IP-XACT
 generator framework (located under 
\begin_inset Quotes eld
\end_inset

scripts/pyXact_generator
\begin_inset Quotes erd
\end_inset

) which extends the implementation of 
\begin_inset CommandInset href
LatexCommand href
name "olofk/ipyxact"
target "https://github.com/olofk/ipyxact"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
1.5 Source code access
\end_layout

\begin_layout Standard
CTU CAN FD IP Core source code is available in CTU FEE Gitlab repository
 at:
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "https://gitlab.fel.cvut.cz/illeondr/CAN_FD_IP_Core"
target "https://gitlab.fel.cvut.cz/illeondr/CAN_FD_IP_Core"
literal "false"

\end_inset


\end_layout

\begin_layout Chapter
2.
 System architecture
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

 
\backslash
thispagestyle{fancy}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The CTU CAN FD IP Core is compliant with VHDL 2008, but it is synthesizable
 also with VHDL 2002.
 Following VHDL packages from IEEE library are used in synthesizable part
 of CTU CAN FD IP core:
\end_layout

\begin_layout Itemize
std_logic_1164
\end_layout

\begin_layout Itemize
numeric_std
\end_layout

\begin_layout Itemize
std_logic_unsigned
\end_layout

\begin_layout Standard
Each module has a unique function and number of dependencies between modules
 is minimal, which allows modularity and flexibility.
 CAN FD IP core is memory mapped periphery which can be embedded to custom
 SoC on FPGA or ASIC.
 The code itself is vendor independent, requiring 
\series bold
no vendor specific libraries
\series default
 or IP cores.
 At the moment, CTU CAN FD has single Slave memory interface.
\end_layout

\begin_layout Section
2.1 Configuration and IO signals 
\end_layout

\begin_layout Standard
CTU CAN FD IP Core is highly configurable before synthesis.
 Different configuration options can be used to further reduce logic resource
 usage.
\end_layout

\begin_layout Standard
CTU CAN FD IP Core can be accessed over either of two buses, Avalon Bus
 or APB (Amba peripheral bus).
 Native interface is Avalon Bus.
 APB compatibility is achieved via wrapper circuit.
 For memory writes, write data are always sampled in the same clock cycle
 as address is active, thus allowing consecutive writes.
 For memory reads, read data are returned one clock cycle after address
 is active.
\end_layout

\begin_layout Subsection
2.1.1 Generic parameters
\end_layout

\begin_layout Standard
Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:CAN-generics"

\end_inset

 lists generic configuration parameters of the CTU CAN FD IP Core which
 can be modified before synthesis.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
use_logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger is/is not synthesized.
 
\end_layout

\begin_layout Plain Layout
Refer to 
\begin_inset CommandInset ref
LatexCommand nameref
reference "subsec:2.3.10-Event-logger"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
rx_buffer_size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natural
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Size of receive buffer in 32 bit words.
\end_layout

\begin_layout Plain Layout
Refer to 
\begin_inset CommandInset ref
LatexCommand nameref
reference "subsec:2.3.10-RX-buffer-1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
use_sync
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use/Don't use synchronisation chain for sampling of CAN bus.
 Can be set to 
\begin_inset Quotes eld
\end_inset

false
\begin_inset Quotes erd
\end_inset

 when synthesis tools automatically insert the synchronisation chain.
 Otherwise set to 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
ID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natural
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID of controller.
 Unique identifier in case of more instances of the IP core on single bus.
 Corresponds to address(19:16) to which the IP core is mapped.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
sup_filtX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Core should support Mask Identifier FilterX (A,B,C) on received frames.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
sup_range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Core should support Range Identifier Filter.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
logger_size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natural
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Size of event logger memory in number of events.
\end_layout

\begin_layout Plain Layout
Refer to 
\begin_inset CommandInset ref
LatexCommand nameref
reference "subsec:2.3.10-Event-logger"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
IP Core generic parameters
\begin_inset CommandInset label
LatexCommand label
name "tab:CAN-generics"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
2.1.1 Avalon memory interface
\end_layout

\begin_layout Standard
Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:CAN-ports-Avalon"

\end_inset

 lists signals of CTU CAN FD on Avalon memory interface.
 When using CTU CAN FD with Avalon Interface, 
\family roman
\shape italic
CAN_top_level
\family default
\shape default
 entity must be used.
 Specific addressing must be used as is explained in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:CAN-FD-IP-1-2"

\end_inset

.
 Note that generic parameter 
\family roman
\shape italic
ID
\family default
\shape default
 is part of Avalon address, thus it is possible to configure address on
 Avalon Bus before synthesis.
 With this architecture, it is possible to create up to 16 instances on
 single paralell memory bus.
 More cores can be instantiated when using Interconnect components.
 Address bits 23:20 must have constant value 0x3.
 This requirement is given by a custom system for which this core was originally
 developed.
 Description of this system is behind the scope of this document.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon Address 23:20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon Address 19:16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon Address 15:0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
ID
\family default
\shape default
 value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Register Address Offset
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Avalon addressing
\begin_inset CommandInset label
LatexCommand label
name "tab:CAN-FD-IP-1-2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
3 consecutive Avalon Write cycles are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Avalon-write-timing-diagram"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 First access (8 bit access) is writing RST bit of MODE register and executing
 SW reset of CTU CAN FD.
 Second access (16 bit access) is clearing all Interrupts in Interruptvector
 via write to INT_STAT register.
 Third access (32 bit access) is configuring Bit timing for Nominal Bit
 Rate in BTR register.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:2.5.9-Memory-registers"
plural "false"
caps "false"
noprefix "false"

\end_inset

 for register description.
\end_layout

\begin_layout Standard
Similarly, 3 Avalon Read cycles are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Avalon-read-timing-diagram-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 First access (8 bit access) is reading STAT register and its default value
 is returned.
 Second access (16 bit access) is reading device Identifier from DEVICE_ID
 register.
 Third access (32 bit access) is reading 0xDEADBEEF value from YOLO_REG.
\end_layout

\begin_layout Standard
Write bursts and Read Bursts which demonstrate storing single CAN Frame
 with 8 data bytes to TXT Buffer and reading data from RX Buffer via RX_DATA
 register are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Avalon-write-burst-timing-diagram-1-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Avalon-read-burst-timing-diagram-1-1-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Note that when reading CAN Frame from RX_DATA register, address is not
 incremented during the burst.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="7cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Synchronous to clock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
clk_sys
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon clock
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
res_n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Asynchronous reset, active low
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
data_in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
data_out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
address
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Address
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
scs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Chip select signal, active high
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
srd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read access, active high
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
swr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Write access, active high
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
sbe
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Avalon bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Byte enable, active high
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt output
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Avalon CTU CAN FD signals
\begin_inset CommandInset label
LatexCommand label
name "tab:CAN-ports-Avalon"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Timing_diagrams/PDFs/Avalon_write.pdf
	lyxscale 20
	scale 68

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Avalon write timing diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Avalon-write-timing-diagram"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Timing_diagrams/PDFs/Avalon_read.pdf
	lyxscale 20
	scale 68

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Avalon read timing diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Avalon-read-timing-diagram-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Timing_diagrams/PDFs/Avalon_write_burst.pdf
	lyxscale 20
	scale 68

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Avalon write burst timing diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Avalon-write-burst-timing-diagram-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Timing_diagrams/PDFs/Avalon_read_burst.pdf
	lyxscale 20
	scale 76

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Avalon read burst timing diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Avalon-read-burst-timing-diagram-1-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
2.1.1 APB memory interface
\end_layout

\begin_layout Standard
Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:CAN-ports-APB"
plural "false"
caps "false"
noprefix "false"

\end_inset

 lists signals of CTU CAN FD on APB memory interface.
 When using CTU CAN FD with Avalon Interface, 
\family roman
\shape italic
can_top_apb
\family default
\shape default
 entity must be used.
 APB memory interface has no address constraints as in case of Avalon Bus
 described in previous section.
\end_layout

\begin_layout Standard
APB Write cycle is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:APB-write-timing-diagram-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 writing to BTR register.
 APB Read cycles are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:APB-read-timing-diagram-1-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 reading from YOLO_REG register.
 APB does not support burst transfers.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="7cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Synchronous to clock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
aclk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB clock.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
arstn
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Asynchronous reset, active low
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_pwdata
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_prdata
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_paddr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Address
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_penable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Access enable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_pprot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol type (signal is unused)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_pready
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read data ready
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_psel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Chip select signal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_pslverr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transfer Error (always 0).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_pstrb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Write strobe
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
s_apb_pwrite
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
APB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Write signal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
irq
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt output
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
APB CTU CAN FD signals
\begin_inset CommandInset label
LatexCommand label
name "tab:CAN-ports-APB"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Timing_diagrams/PDFs/APB_write.pdf
	lyxscale 20
	scale 68

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
APB write timing diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:APB-write-timing-diagram-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Timing_diagrams/PDFs/APB_read.pdf
	lyxscale 20
	scale 68

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
APB read timing diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:APB-read-timing-diagram-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
2.1.1 Common signals
\end_layout

\begin_layout Standard
Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:CAN-ports-common"
plural "false"
caps "false"
noprefix "false"

\end_inset

 lists common signals of CTU CAN FD which are available if either of APB
 or Avalon wrappers is used.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="6.5cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Synchronous to clock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
CAN_tx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAN bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TX signal to CAN bus
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
CAN_rx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAN bus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RX signal from CAN bus
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
time_quanta_clk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output clock with period of time quanta.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\shape italic
timestamp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Timestamp for frame transmition
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Common CTU CAN FD signals
\begin_inset CommandInset label
LatexCommand label
name "tab:CAN-ports-common"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
2.2 Clock domains, external signals synchronization and reset
\end_layout

\begin_layout Standard
The whole IP Core is synchronous to one clock signal (in case of Avalon
 clock name is 
\family roman
\shape italic
clk_sys
\family default
\shape default
, in case of APB clock name is 
\family roman
\shape italic
aclk
\family default
\shape default
).
 Throughout the design clock name is 
\family roman
\shape italic
clk_sys
\family default
\shape default
.
 Every other time period is derived from 
\family roman
\shape italic
clk_sys
\family default
\shape default
 (Time quantum, Bit time...).
 The main core reset (
\family roman
\shape italic
res_n
\family default
\shape default
 on Avalon, 
\family roman
\shape italic
arstn
\family default
\shape default
 on APB) is an 
\series bold
asynchronous reset
\series default
 (active low) and it is internally synchronised by two flip-flop synchroniser.
 After reset is released 
\series bold
at least two clock cycles
\series default
 must elapse before the core is accessed.
 If this condition is corrupte, Avalon write access will have no effect
 and Avalon read will return zero values.
 On APB access will insert wait state via 
\family roman
\shape italic
s_apb_pready
\family default
\shape default
 signal.
 Reffer to APB Specification(TODO) for more on APB wait States.
\end_layout

\begin_layout Standard
Input signals of Memory bus interface and time stamp value are expected
 to be synchronous to 
\family roman
\shape italic
clk_sys
\family default
\shape default
 / 
\family roman
\shape italic
aclk
\family default
\shape default
, and no clock synchronization is implemented on these signals.
 
\family roman
\shape italic
CAN_RX
\family default
\shape default
 signal is synchronized by synchronization chain with two flip-flops.
 This synchronization chain is optional, but it is recommended to use it,
 unless synthesis tools automatically insert synchronization chain! Insertion
 of this synchronization chain is set by 
\family roman
\shape italic
use_sync
\family default
\shape default
 generic.
\end_layout

\begin_layout Section
2.4 Signal architecture
\end_layout

\begin_layout Standard
To simplify VHDL implementation, two parallel 
\begin_inset Quotes eld
\end_inset

buses
\begin_inset Quotes erd
\end_inset

 are used: 
\series bold
Driving Bus
\series default
 (
\family roman
\shape italic
drv_bus
\family default
\shape default
) and
\series bold
 Status Bus
\series default
 (
\family roman
\shape italic
stat_bus
\family default
\shape default
).
 These buses have a form of std logic vector.
 Each bus is driven from one entity and connected to other entities.
\end_layout

\begin_layout Subsection
2.4.1 Driving Bus
\end_layout

\begin_layout Standard
The Driving bus is used to control functionality of every module from user
 registers.
 It is driven in 
\series bold
Memory Registers
\series default
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:2.5.9-Memory-registers"

\end_inset

).
 Every parameter of the IP Core which can be configured by the user is part
 of the Driving bus.
 An exact definition of Driving bus separates memory registers from other
 blocks.
 Thus it is possible to change the registers structure without modification
 of internal signaling.
 List of signals in Driving bus is in Appendix A (TODOREF).
 Driving bus has the following format:
\end_layout

\begin_layout LyX-Code

\series bold
\color black
signal drv_bus : std_logic_vector(1023 downto 0)
\end_layout

\begin_layout Subsection
2.4.2 Status Bus
\end_layout

\begin_layout Standard
Status bus is used to provide information about state and state registers
 of CAN Controller Core.
 It's driven in CAN Controller Core.
 Status Bus is used by Memory registers and Event logger modules.
 List of signals in Status bus is in Appendix B (TODOREF).
 Status Bus has the following format:
\end_layout

\begin_layout LyX-Code

\series bold
\color black
signal stat_bus : std_logic_vector(511 downto 0)
\end_layout

\begin_layout Section
2.1 Absolute maximum ratings
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="4cm">
<column alignment="center" valignment="top" width="3cm">
<column alignment="center" valignment="top" width="3cm">
<column alignment="center" valignment="top" width="3cm">
<column alignment="center" valignment="top" width="2cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimal Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reccomended value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximal value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock frequency
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TODO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MHz
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PH2, PH2 FD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock Cycles
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PH1 + PROP FD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock Cycles
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nominal bit-rate*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1,544
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kb/s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data bit-rate*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3,112
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14 286
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kb/s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TX Frame selection
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock
\end_layout

\begin_layout Plain Layout
Cycles
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Absolute maximum ratings
\begin_inset CommandInset label
LatexCommand label
name "tab: Absolute_maximum_rating"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
2.3 Block diagram
\end_layout

\begin_layout Standard
The block diagram of CTU CAN FD is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:IP-function-block"

\end_inset

.
 Every block is a separate VHDL entity and it is implemented in a standalone
 file.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/IP_core_block_diagram.pdf
	lyxscale 20
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
CTU CAN FD block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:IP-function-block"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
2.3 Pipeline architecture
\end_layout

\begin_layout Standard
CTU CAN FD controller datapath is pipelined on both TX and RX data paths.
 Pipeline architecture is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pipeline-Architecture"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and it describes pipeline levels on RX and TX datapaths.
\end_layout

\begin_layout Standard
RX serial data stream contains 3 stages of pipeline:
\end_layout

\begin_layout Enumerate
Sample RX pin from CAN bus.
\end_layout

\begin_layout Enumerate
Perform Bit Destuffing on sampled CAN RX data.
\end_layout

\begin_layout Enumerate
Process Bit Destuffed data by Protocol Control FSM (TODOREF).
\end_layout

\begin_layout Standard
TX serial data stream contains 2 stages of pipeline:
\end_layout

\begin_layout Enumerate
Transmitt bit by Protocol Control.
\end_layout

\begin_layout Enumerate
Perform bit stuffing on transmitted bit.
 Output from bit stuffing is directly connected to CAN TX data.
\end_layout

\begin_layout Standard
To achieve such data processing two Triggering Signal Types are generated:
 TX triggers for transmission and RX triggers for reception.
 Triggers are generated by Prescaler circuit.
 TX Triggers contain two triggers, RX Triggers contain three triggers.
 Each signal within Trigger Type is delayed by one clock cycle to previous
 one, and it is used as Byte enable signal in data processing by the next
 stage of pipeline.
 This architecture is directly affecting Information Processing Time, reffer
 to TODOREF for explanation.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/Pipeline_architecture.pdf
	lyxscale 20
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Datapath Pipeline
\begin_inset CommandInset label
LatexCommand label
name "fig:Pipeline-Architecture"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
2.5 Components description
\end_layout

\begin_layout Subsection
2.5.1 CAN Core
\end_layout

\begin_layout Description
File core_top.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in CAN_top_level.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
core_top
\end_layout

\begin_layout Standard
CAN Core implements functionality of serial data transmission according
 to CAN FD standard.
 Frame transmission, reception, arbitration, bit stuffing, bit destuffing,
 CRC calculation, error handling and fault confinement are implemented by
 sub-module instances.
 Block diagram is in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CAN-Core-block"

\end_inset

.
 Inside this module correct CRC is selected (
\family roman
\shape italic
crc15
\family default
\shape default
, 
\family roman
\shape italic
crc17
\family default
\shape default
, 
\family roman
\shape italic
crc21
\family default
\shape default
) based on actually transmitted frame type (
\family roman
\shape italic
tran_frame_type), 
\family default
\shape default
received frame type (
\family roman
\shape italic
rec_frame_type
\family default
\shape default
) and Operational State (
\family roman
\shape italic
OP_State
\family default
\shape default
).
 Transceive Trigger (
\family roman
\shape italic
tran_trig
\family default
\shape default
) and Receive Trigger (
\family roman
\shape italic
rec_trig
\family default
\shape default
) are created here from Triggerring signals (
\family roman
\shape italic
sync_nbt
\family default
\shape default
, 
\family roman
\shape italic
sync_dbt
\family default
\shape default
, 
\family roman
\shape italic
sample_nbt
\family default
\shape default
, 
\family roman
\shape italic
sample_dbt
\family default
\shape default
) from Prescaler.
 When Stuff Bit is inserted or Stuff Bit is discarded, Transceive and Receive
 Triggers are not activated due to signals 
\family roman
\shape italic
data_halt
\family default
\shape default
 and 
\family roman
\shape italic
destuffed
\family default
\shape default
.
 Bit Stuffing and Bit Destuffing Triggers (
\family roman
\shape italic
bs_trig
\family default
\shape default
, 
\family roman
\shape italic
bds_trig
\family default
\shape default
) are multiplexed in this module.
 Status Bus (
\family roman
\shape italic
stat_bus
\family default
\shape default
) signals assignments and Traffic measurement (
\family roman
\shape italic
tx_counter
\family default
\shape default
, 
\family roman
\shape italic
rx_counter
\family default
\shape default
) are implemented in this module.
 Internal loopback multiplexor (
\family roman
\shape italic
int_loopback_ena
\family default
\shape default
) allows bypassing TX Data to RX Data without sending it to CAN Bus.
 Note that in case of Secondary Sampling (
\family roman
\shape italic
sp_control_int = SECONDARY_SAMPLE
\family default
\shape default
), TX data are also directly looped back to RX Data to allow proper operation
 of Protocol Control State machine.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/Core_block_diagram.pdf
	lyxscale 20
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
CAN Core block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:CAN-Core-block"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
2.5.1.1 Protocol Control
\end_layout

\begin_layout Description
File protocolControl.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in core_top.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
protocolControl
\end_layout

\begin_layout Standard
Protocol Control (
\family roman
\shape italic
PC_State
\family default
\shape default
) is the main state machine handling CAN FD protocol.
 Protocol Control processes received data with the 
\family roman
\shape italic
rec_trig
\family default
\shape default
 signal (in Sample Point of bit).
 Protocol Control State is also changed with 
\family roman
\shape italic
rec_trig
\family default
\shape default
 signal.
 Data are transmitted with 
\family roman
\shape italic
tran_trig
\family default
\shape default
 signal (in Sync segment of bit).
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab: PC_most_important_signals"
plural "false"
caps "false"
noprefix "false"

\end_inset

 lists most important signals within Protocol Control module.
 Note that internal registers are named with 
\begin_inset Quotes eld
\end_inset

_r
\begin_inset Quotes erd
\end_inset

 suffix.
 When registers are connected to output of Protocol Control module, 
\begin_inset Quotes eld
\end_inset

_r
\begin_inset Quotes erd
\end_inset

 suffix is ommitted (e.g register 
\family roman
\shape italic
stuff_enable_r
\family default
\shape default
 is connected to output port 
\family roman
\shape italic
stuff_enable
\family default
\shape default
).
 Protocol control state transition diagram is displayed in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:PC_control-1"

\end_inset

.
 For simplicity only main state transitions are displayed!
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_protocol_control.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Protocol Control State Machine
\begin_inset CommandInset label
LatexCommand label
name "fig:PC_control-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="27" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="7cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PC_State
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
protocol_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control FSM signal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FSM_preset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
internal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal which is set to logic '1' with each transition of PC_State, otherwise
 set to 0.
 Indicates first clock cycle of any PC_State.
 First clock cycle of each state is used for configuration of the state
 (e.g.
 setting counters)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data_tx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transmitted CAN frame.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data_rx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Received CAN frame.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tran_trig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transceive trigger in SYNC part of bit.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rec_trig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Receive trigger in SAMPLE point of bit.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OP_State
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operational state of CAN Node.
 See TODO.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sp_control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic_vector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit time control.
 TODO
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sync_control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic_vector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Synchronisation control.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
arbitration_lost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signals loss of arbitration for Operation control FSM.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stuff_enable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
In '1' bit stuffing is enabled, otherwise disabled.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
destuff_enable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
In '1' bit destuffing is enabled, otherwise disabled.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
fixed_stuff
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
In '1' fixed bit stuffing is used, otherwise normal bit stuffing is used.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
fixed_destuff
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
In '1' fixed bit destuffing is used, otherwise normal bit destuffing is
 used.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stuff_length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic_vector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of consecutive equal bits which cause insertion of stuff bit.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
destuff_length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic_vector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of consecutive equal bits which cause insertion of destuff bit.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
txt_hw_cmd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command structure for TXT Buffers.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inc_one
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signals that Error counter should be incremented by 1.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inc_eight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signals that error counter should be incremented by 8.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dec_one
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signals that error counter should be decremented by 1.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
crc_enable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
In '1' CRC calculation is enabled.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tran_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transmission of frame was succesfull.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rec_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reception of frame was sucesfull.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tran_pointer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
internal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic_vector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Counter for transmission of Identifier
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
data_pointer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
internal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic_vector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Counter for transmission of Data field.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
control_pointer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
internal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
std_logic_vector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Counter for transmission of other fields.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Most important Protocol control signals
\begin_inset CommandInset label
LatexCommand label
name "tab: PC_most_important_signals"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Paragraph*
off
\end_layout

\begin_layout Standard
Circuit operation starts from 
\family roman
\shape italic
off
\family default
\shape default
 state.
 When CTU CAN FD is enabled by write to SETTINGS[ENA] register (
\family roman
\shape italic
drv_ena
\family default
\shape default
), and unit is not integrating anymore (
\family roman
\shape italic
not (error_state = bus_off)
\family default
\shape default
), Protocol Control moves to 
\family roman
\shape italic
interframe
\family default
\shape default
 state.
 Upon available TX Frame (
\family roman
\shape italic
tran_frame_valid_in
\family default
\shape default
) or reception of Recessive to Dominant edge (
\family roman
\shape italic
hard_sync_edge
\family default
\shape default
), new frame is started by transition to 
\family roman
\shape italic
sof
\family default
\shape default
.
 When TX Frame is available, TXT Buffer is locked (
\family roman
\shape italic
txt_hw_cmd.lock
\family default
\shape default
).
 After 1 bit, state is changed to 
\family roman
\shape italic
arbitration
\family default
\shape default
.
\end_layout

\begin_layout Paragraph*
arbitration
\end_layout

\begin_layout Standard
In first clock cycle of 
\family roman
\shape italic
arbitration
\family default
\shape default
, shift registers for transmission of CAN Identifier are loaded (
\family roman
\shape italic
tran_ident_base_sr
\family default
\shape default
, 
\family roman
\shape italic
tran_ident_ext_sr
\family default
\shape default
).
 In arbitration, Bit Error is detected only upon transmission of Dominant
 Bit and Reception of Recessive bit.
 If Recessive is transmitted, but Dominant is received, arbitration loss
 is signalled to Operation Control FSM (
\family roman
\shape italic
arbitration_lost
\family default
\shape default
).
 At the end of Arbitration field of CAN Frame, Protocol Control is moved
 to 
\family roman
\shape italic
control
\family default
\shape default
 state (for Control field of CAN Frame).
 In control field, combinations of CAN 2.0 / CAN FD and Base / Extended Identifie
rs are handled separately.
 Since in Control field it is already clear whether unit is Transmitter
 or Receiver of a frame, each case is considered separately.
 FSM state 
\family roman
\shape italic
arbitration 
\family default
\shape default
contains sub-FSM (
\family roman
\shape italic
arb_state
\family default
\shape default
) which is used to handle different types of CAN Identifiers.
 State transition diagram is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Arbitration_FSM"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Upon start of 
\family roman
\shape italic
arbitration
\family default
\shape default
, 
\family roman
\shape italic
arb_state
\family default
\shape default
 is in 
\family roman
\shape italic
base_id
\family default
\shape default
, which covers transmission of Base Identifier.
 After 11 bits transmission / reception (controlled by 
\family roman
\shape italic
tran_pointer
\family default
\shape default
), state is switched to 
\family roman
\shape italic
two_bits
\family default
\shape default
, which covers transmission of two bits following Base Identifier.
 First bit is RTR, r1 or SRR depending on Frame Format (
\family roman
\shape italic
tran_frame_type
\family default
\shape default
) and Identifier Type (
\family roman
\shape italic
tran_ident_type
\family default
\shape default
).
 Second bit is IDE for each frame type.
 Note that IDE bit of frames with only BASE Identifier should already be
 part of Control field! Since this bit is transmitted dominant for these
 frames, node can't loose arbitration in this bit.
 Thus it is not problematic that this bit is part of Arbitration field instead
 of Control field.
 Upon sampled value of IDE bit (
\family roman
\shape italic
rec_ident_type
\family default
\shape default
), 
\family roman
\shape italic
arb_state 
\family default
\shape default
is transferred to either 
\family roman
\shape italic
ext_id
\family default
\shape default
, or Protocol Control exits to 
\family roman
\shape italic
control
\family default
\shape default
.
 In 
\family roman
\shape italic
ext_id
\family default
\shape default
, transmission of 18 bit Identifier Extension is covered.
 Upon end of Identifier Extension (
\family roman
\shape italic
tran_pointer = 0
\family default
\shape default
), 
\family roman
\shape italic
arb_state
\family default
\shape default
 is updated to 
\family roman
\shape italic
one_bit
\family default
\shape default
.
 One bit covers 1 bit following Identifier Extesion.
 This bit corresponds to RTR or r1 bit depending on frame type.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_arbitration.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arbitration State Machine
\begin_inset CommandInset label
LatexCommand label
name "fig:Arbitration_FSM"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
control
\end_layout

\begin_layout Standard
In first cycle of 
\family roman
\shape italic
control
\family default
\shape default
 for Transmitted, shift register for transmission is loaded (
\family roman
\shape italic
ctrl_tran_reg
\family default
\shape default
).
 Length of field is controlled with 
\family roman
\shape italic
control_pointer
\family default
\shape default
 counter.
 In case of CAN FD Frame, bit rate is shifted (
\family roman
\shape italic
sp_control_r
\family default
\shape default
) in BRS bit.
 Data sampling (
\family roman
\shape italic
DATA_SAMPLE
\family default
\shape default
) is used for Receiver, and Secondary sampling (
\family roman
\shape italic
SECONDARY_SAMPLE
\family default
\shape default
) is used Transmitter.
 Such a difference is necessary, since Transmitter must be able to receive
 its own bit with delayed sample point for Bit error detection (reffer to
 TODOREF).
 Receiver of CAN FD Frame sets hard synchronisation in EDL bit (
\family roman
\shape italic
sync_control_r <= HARD_SYNC
\family default
\shape default
).
 Note that after BRS bit of CAN FD Transmitter, no synchronisation is performed
 (
\family roman
\shape italic
sync_control_r <= NO_SYNC
\family default
\shape default
).
 Furthermore, in case of CAN FD Frames, transceiver delay calibration is
 started (
\family roman
\shape italic
trv_delay_calib_r
\family default
\shape default
, ssp_reset) in EDL bit (reffer to BusSync module TODOREF).
 Upon end of control field (
\family roman
\shape italic
control_pointer = 0
\family default
\shape default
), Protocol Control state is changed to 
\family roman
\shape italic
Data
\family default
\shape default
 or 
\family roman
\shape italic
CRC
\family default
\shape default
, based on Transmitted / Received Data Length (tran_dlc, rec_dlc), RTR Flag
 (
\family roman
\shape italic
tran_is_rtr
\family default
\shape default
, 
\family roman
\shape italic
rec_is_rtr)
\family default
\shape default
 and RTR preffered behaviour (
\family roman
\shape italic
drv_rtr_pref
\family default
\shape default
, see register TODOREF).
 Upon the end of control field, receiver signals to RX Buffer (see TODO),
 that first 4 words of CAN Frame (see TODO) can be stored (
\family roman
\shape italic
store_metadata
\family default
\shape default
).
\end_layout

\begin_layout Paragraph*
data
\end_layout

\begin_layout Standard
In 
\family roman
\shape italic
data
\family default
\shape default
 state, transmitter transmitts data from locked TXT Buffer, and updates
 pointer to TXT Buffer memory (
\family roman
\shape italic
txt_buf_ptr_r
\family default
\shape default
) to obtain next data bytes.
 Within each TXT Buffer memory word (
\family roman
\shape italic
tx_data_word
\family default
\shape default
), transmitted bit is addressed with 
\family roman
\shape italic
data_tx_index
\family default
\shape default
.
 Receiver sample RX data to 8 bit shift register (
\family roman
\shape italic
rec_data_sr
\family default
\shape default
).
 When whole byte is received, it is stored to 
\family roman
\shape italic
store_data_word_r
\family default
\shape default
 register.
 Upon reception of 4 bytes (
\family roman
\shape italic
rec_word_bind = 3
\family default
\shape default
) or end of Data field (
\family roman
\shape italic
data_pointer = 0
\family default
\shape default
), contents of 
\family roman
\shape italic
store_data_word_r
\family default
\shape default
 is stored in RX Buffer by giving Store Data Command (
\family roman
\shape italic
store_data_r
\family default
\shape default
).
 Upon the end of Data field, Protocol Control is changed to 
\family roman
\shape italic
crc
\family default
\shape default
.
\end_layout

\begin_layout Paragraph
crc
\end_layout

\begin_layout Standard
In 
\family roman
\shape italic
crc
\family default
\shape default
 proper CRC is selected (
\family roman
\shape italic
crc_src
\family default
\shape default
), and Fixed Bit Stuffing and Fixed Bit De-Stuffing is configured for CAN
 FD Frames.
 CRC length is controlled with counter 
\family roman
\shape italic
data_pointer
\family default
\shape default
, and upon its expiration Protocol Control is updated to 
\family roman
\shape italic
delim_ack
\family default
\shape default
.
 This state contains sub-FSM
\family roman
\shape italic
 crc_state
\family default
\shape default
 which is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CRC_FSM-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 During first clock cycle (
\family roman
\shape italic
FSM_preset = '1'
\family default
\shape default
) of 
\family roman
\shape italic
crc
\family default
\shape default
, 
\family roman
\shape italic
crc_state
\family default
\shape default
 is preset to either 
\family roman
\shape italic
stuff_count
\family default
\shape default
 or 
\family roman
\shape italic
real_crc
\family default
\shape default
 depending on ISO / NON-ISO configuration of CTU CAN FD Core (
\family roman
\shape italic
drv_fd_type
\family default
\shape default
).
 During 
\family roman
\shape italic
stuff_count
\family default
\shape default
 state Transmitter transmitts number of stuffed bits (
\family roman
\shape italic
stuff_count_grey
\family default
\shape default
) which is calculated by Bit Stuffing circuit (TODOREF).
 Additionally stuff parity is transmitted (
\family roman
\shape italic
stuff_parity
\family default
\shape default
).
 Complementary, both fields are received in 
\family roman
\shape italic
rx_count_grey
\family default
\shape default
 and 
\family roman
\shape italic
rx_parity
\family default
\shape default
.
 Note the difference in disabling CRC calculation (
\family roman
\shape italic
crc_enable_r <= '0'
\family default
\shape default
) between ISO and NON-ISO CAN FD Frames.
 In NON-ISO CAN FD Frames, CRC calculation is disabled in first clock cycle
 of 
\family roman
\shape italic
crc
\family default
\shape default
.
 In ISO CAN FD Frames, CRC calculation is disabled upon transition to 
\family roman
\shape italic
real_crc
\family default
\shape default
 on 
\family roman
\shape italic
crc_state
\family default
\shape default
.
 During 
\family roman
\shape italic
real_crc
\family default
\shape default
 Transmitter sends calculated CRC (crc15, crc17, crc21) and both nodes receive
 CRC sequence to shifit register (
\family roman
\shape italic
rec_crc_r
\family default
\shape default
).
 Upon the expiration of 
\family roman
\shape italic
data_pointer
\family default
\shape default
, Protocol Control is updated to 
\family roman
\shape italic
delim_ack
\family default
\shape default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_CRC.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
CRC State Machine
\begin_inset CommandInset label
LatexCommand label
name "fig:CRC_FSM-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
delim_ack
\end_layout

\begin_layout Standard
In 
\family roman
\shape italic
delim_ack
\family default
\shape default
 state CRC Delimiter, ACK Field and ACK Delimiter bits are handled.
 Length of this field is controlled with 
\family roman
\shape italic
control_pointer
\family default
\shape default
 counter.
 In CRC Delimiter of CAN FD Frame, bit rate is switched back to Nominal
 Bit Rate (
\family roman
\shape italic
sp_control_r <= NOMINAL_SAMPLE
\family default
\shape default
).
 Bit Stuffing and Bit Destuffing circuits are disabled (
\family roman
\shape italic
stuff_enable
\family default
\shape default
, 
\family roman
\shape italic
destuff_enable
\family default
\shape default
) in CRC Delimiter to allow possible stuff bit insertion in last bit of
 CRC field.
 Receiver will transmitt Dominant bit in ACK field (
\family roman
\shape italic
control_pointer = 1
\family default
\shape default
), if received CRC is matching calculated CRC (
\family roman
\shape italic
crc_check
\family default
\shape default
).
 Note that Transmitter allows reception of up to two bits in position of
 CRC Delimiter (
\family roman
\shape italic
sec_ack
\family default
\shape default
) to compensate for possible Bit Timing mismatch due to Bit Rate shift.
 Reception of Dominant Bit in ACK field is marked in 
\family roman
\shape italic
ack_recieved
\family default
\shape default
 register.
 Upon the end of 
\family roman
\shape italic
delim_ack
\family default
\shape default
, Protocol Control is updated to 
\family roman
\shape italic
eof
\family default
\shape default
 or 
\family roman
\shape italic
error
\family default
\shape default
 based on value in 
\family roman
\shape italic
ack_received
\family default
\shape default
.
\end_layout

\begin_layout Paragraph
eof
\end_layout

\begin_layout Standard
End of Frame field is transmitted in 
\family roman
\shape italic
eof 
\family default
\shape default
field.
 Length of state is controlled by 
\family roman
\shape italic
control_pointer
\family default
\shape default
.
 When Dominant bit is received in last bit of eof, Protocol Control is updated
 to 
\family roman
\shape italic
overload
\family default
\shape default
.
 Reception of other Dominant bit signals Error flag and Protocol Control
 is updated to 
\family roman
\shape italic
error
\family default
\shape default
.
 One bit before the end of 
\family roman
\shape italic
eof
\family default
\shape default
 (
\family roman
\shape italic
control_pointer = 1
\family default
\shape default
) frame reception is considered as valid and 
\family roman
\shape italic
rec_valid_r
\family default
\shape default
 is set.
 In the last bit of 
\family roman
\shape italic
eof
\family default
\shape default
 (
\family roman
\shape italic
control_pointer = 0
\family default
\shape default
) frame transmission is considered as valid and 
\family roman
\shape italic
tran_valid_r 
\family default
\shape default
is set.
 TXT Buffer is unlocked and frame transmission is signalled to TXT Buffer
 (
\family roman
\shape italic
txt_hw_cmd.unlock, txt_hw_cmd.valid
\family default
\shape default
).
 If 
\family roman
\shape italic
control_pointer
\family default
\shape default
 elapses with only Recessive bits detected, Protocol Control is updated
 to 
\family roman
\shape italic
interframe
\family default
\shape default
.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_Interframe.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interframe State Machine
\begin_inset CommandInset label
LatexCommand label
name "fig:Interframe-FSM-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
interframe
\end_layout

\begin_layout Standard
In 
\family roman
\shape italic
interframe
\family default
\shape default
 state of Protocol Control Interframe Space of CAN Frame is transmitted.
 This state contains sub-FSM 
\family roman
\shape italic
interm_state
\family default
\shape default
 which is started in 
\family roman
\shape italic
intermission
\family default
\shape default
 and it is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Interframe-FSM-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Reception of Dominant bit during first two bits of 
\family roman
\shape italic
intermission 
\family default
\shape default
(
\family roman
\shape italic
control_pointer_non_zero
\family default
\shape default
) is interpreted as Overload Condition and Protocol Control is updated to
 
\family roman
\shape italic
overload
\family default
\shape default
.
 Reception of Dominant bit in last bit is interpreted as next Start of Frame
 and Protocol Control is updated to 
\family roman
\shape italic
sof
\family default
\shape default
.
 If node is Error passive (
\family roman
\shape italic
error_state = error_passive
\family default
\shape default
) and Transmitter of previous frame (
\family roman
\shape italic
OP_State = transciever
\family default
\shape default
), 
\family roman
\shape italic
interframe
\family default
\shape default
 is moved to 
\family roman
\shape italic
suspend
\family default
\shape default
 state.
 In 
\family roman
\shape italic
suspend
\family default
\shape default
 state only Recessive bits are sent to the bus, and sampling Dominant bit
 moves Protocol Control to 
\family roman
\shape italic
sof
\family default
\shape default
, but unit immediately starts new frame as a receiver.
 Last state of 
\family roman
\shape italic
interm_state
\family default
\shape default
 is 
\family roman
\shape italic
interm_idle
\family default
\shape default
.
 which can be ended either by presence of Recessive to Dominant edge (
\family roman
\shape italic
hard_sync_edge
\family default
\shape default
) or presence of new frame for transmission (
\family roman
\shape italic
tran_frame_valid_in
\family default
\shape default
).
 Upon both of these conditions Protocol Control is updated to 
\family roman
\shape italic
sof
\family default
\shape default
.
\end_layout

\begin_layout Paragraph*
error
\end_layout

\begin_layout Standard
Transmission of Error Frame is handled via state 
\family roman
\shape italic
error
\family default
\shape default
 of Protocol Control.
 Conditions which can lead to transition to 
\family roman
\shape italic
error
\family default
\shape default
 state are further explained in TODOREF.
 This state contains sub-FSM 
\family roman
\shape italic
err_frame_state
\family default
\shape default
 which is shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Error-Frame-FSM-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 This FSM is started from 
\family roman
\shape italic
err_flg_sup
\family default
\shape default
 state.
 During 
\family roman
\shape italic
err_flg_sup
\family default
\shape default
, 6 Dominant (Active Error Flag) or Recessive (Passive Error Flag) bits
 are sent and state is exited upon reception of Recessive bit to 
\family roman
\shape italic
err_delim
\family default
\shape default
.
 If there are 14 consecutive Dominant bits received (
\family roman
\shape italic
tran_pointer = 0
\family default
\shape default
), 
\family roman
\shape italic
error
\family default
\shape default
 state is restarted and error counters incremented by 8 (
\family roman
\shape italic
inc_eight = '1'
\family default
\shape default
).
 In 
\family roman
\shape italic
err_delim
\family default
\shape default
 6 recessive bits are counted, and Protocol Control State is moved to 
\family roman
\shape italic
interframe
\family default
\shape default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_Error.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Error Frame State Machine
\begin_inset CommandInset label
LatexCommand label
name "fig:Error-Frame-FSM-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_Overload.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Overload Frame State Machine
\begin_inset CommandInset label
LatexCommand label
name "fig:Overload-Frame-FSM-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
overload
\end_layout

\begin_layout Standard
Upon detection of Overload Condition, Protocol Control state is updated
 to 
\family roman
\shape italic
overload
\family default
\shape default
.
 Logic of this state is formally very similar to state 
\family roman
\shape italic
error
\family default
\shape default
.
 This state consists of sub-FSM 
\family roman
\shape italic
ovr_frame_state
\family default
\shape default
 which is displayed in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Overload-Frame-FSM-1-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 FSM is started from 
\family roman
\shape italic
ovr_flg_sup
\family default
\shape default
, which represent Overload Delimiter.
 Duration of state is cotrolled via 
\family roman
\shape italic
control_pointer
\family default
\shape default
.
 Upon detection of 14 consecutive Dominant bits, Protocol Control is updated
 to 
\family roman
\shape italic
error
\family default
\shape default
.
 Upon reception of Recessive bit, 
\family roman
\shape italic
ovr_frame_state 
\family default
\shape default
is updated to 
\family roman
\shape italic
ovr_delim
\family default
\shape default
.
 Overload Delimiter consists of 8 Recessive bits.
 Upon expiration of 
\family roman
\shape italic
control_pointer
\family default
\shape default
, Protocol Control is moved to 
\family roman
\shape italic
interframe
\family default
\shape default
.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
2.5.1.2 Operation control
\end_layout

\begin_layout Description
File operationControl.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in core_top.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
operationControl
\end_layout

\begin_layout Standard
Operation Control is module handling 
\begin_inset Quotes eld
\end_inset

Operation mode
\begin_inset Quotes erd
\end_inset

 as defined in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

.
 It means unit integration after start, transmission mode (Transmitter),
 reception mode (Receiver) and Bus Idle.
 Other modes defined in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

 (Bus monitoring mode, Self - Test mode) are implemented via dedicated signals
 of Driving Bus (
\family roman
\shape italic
drv_bus_mon_ena
\family default
\shape default
, 
\family roman
\shape italic
drv_self_test_ena
\family default
\shape default
 signals).
 State machine of Operation Control (
\family roman
\shape italic
OP_State
\family default
\shape default
) is described in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:OP_control"

\end_inset

.
 This FSM can be forced to transceiver or receiver state by signals 
\family roman
\shape italic
set_transceiver
\family default
\shape default
, 
\family roman
\shape italic
set_receiver
\family default
\shape default
.
 State machine is started in 
\family roman
\shape italic
integrating
\family default
\shape default
 state.
 If CTU CAN FD is enabled (
\family roman
\shape italic
drv_ena
\family default
\shape default
), number of consecutive Recessive bits is counted in 
\family roman
\shape italic
integ_counter
\family default
\shape default
.
 If 11 consecutive bits are reached, Operation Control moves to 
\family roman
\shape italic
idle
\family default
\shape default
.
 Upon detection of valid data for transmission (
\family roman
\shape italic
tran_frame_valid_in
\family default
\shape default
), Operation State is changed to 
\family roman
\shape italic
transceiver
\family default
\shape default
.
 Loss off arbitration is signaled from Protocol Control FSM via 
\family roman
\shape italic
arbitration_lost 
\family default
\shape default
signal.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_operation_control.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Operation Control state machine
\begin_inset CommandInset label
LatexCommand label
name "fig:OP_control"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
2.5.1.3 Fault confinement
\end_layout

\begin_layout Description
File faultConf.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in core_top.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
faultConf
\end_layout

\begin_layout Standard
Fault confinement module implements Fault Confinement state (
\family roman
\shape italic
error_state
\family default
\shape default
), TX / RX error counters (
\family roman
\shape italic
tx_counter
\family default
\shape default
, 
\family roman
\shape italic
rx_counter
\family default
\shape default
), Bit error and Stuff error validation.
 Block diagram of this module is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Fault-block-diagram"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Error counters for Fault confinement (
\family roman
\shape italic
rx_counter
\family default
\shape default
, 
\family roman
\shape italic
tx_counter
\family default
\shape default
) are manipulated via 
\family roman
\shape italic
inc_one
\family default
\shape default
, 
\family roman
\shape italic
inc_eight
\family default
\shape default
, 
\family roman
\shape italic
dec_one
\family default
\shape default
 signals from Protocol Control FSM, therefore all exceptions in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

 (Fault Confinement Chapter) are managed by Protocol Control FSM.
 These error counters are implemented to be read / write (via Driving Bus,
 signals 
\family roman
\shape italic
drv_ctr_sel
\family default
\shape default
, 
\family roman
\shape italic
drv_ctr_val
\family default
\shape default
) from Memory Registers (see TODOREF), so that Fault Confinement state can
 be manipulated from SW.
 This provides an extended testing functionality of CTU CAN FD controller.
 Furthermore, two additional counters (
\family roman
\shape italic
err_counter_norm
\family default
\shape default
, 
\family roman
\shape italic
err_counter_fd
\family default
\shape default
), are implemented to distinguish between errors which appeared in Nominal
 Bit rate and Data Bit rate.
 These additional counters are incremented by 1 for each transmitted Error
 frame.
 
\end_layout

\begin_layout Standard
To remain compliant with CAN FD standard, counters for 128 ocurrencess of
 11 consecutive bits is implemented in this module (
\family roman
\shape italic
cons_rec_ctr, cons_128_11_rec_ctr
\family default
\shape default
).
 When command to reset error counters is given by write to MODE[ERCRST],
 
\family roman
\shape italic
drv_clr_err_ctrs
\family default
\shape default
 signal is activated and both counters are set to 0.
 When 
\family roman
\shape italic
cons_rec_ctr
\family default
\shape default
 reaches 10 (counting from 0), it is restarted and 
\family roman
\shape italic
cons_128_11_rec_ctr 
\family default
\shape default
counter is incremented.
 When 
\family roman
\shape italic
cons_128_11_rec_ctr
\family default
\shape default
 reaches 127, 
\family roman
\shape italic
reset_err_counters
\family default
\shape default
 is set, Error counters are set to 0 and both Fault confinement state is
 set to 
\family roman
\shape italic
error_active
\family default
\shape default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/Fault_State_Block_diagram.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Fault Confinement block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Fault-block-diagram"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
2.5.1.4 Bit stuffing
\end_layout

\begin_layout Description
File bitStuffing_v2.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in core_top.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
bitStuffing
\end_layout

\begin_layout Standard
Bit stuffing module implements functionality stuff bit insertion into a
 serial data stream.
 Number of equal consecutive bits is configurable via 
\family roman
\shape italic
length
\family default
\shape default
 input.
 Fixed Bit Stuffing method for CRC field of CAN FD frames can be set by
 
\family roman
\shape italic
fixed_stuff
\family default
\shape default
 input.
 Since CAN FD Protocol requires Fixed Stuff Bit to be inserted in first
 bit of CRC field, Bit Stuffing circuit automatically inserts Stuff Bit
 after change on 
\family roman
\shape italic
fixed_stuff
\family default
\shape default
 input (0->1).
 Circuit operates with Bit Stuffing Trigger (see TODOREF), which is one
 clock cycle delayed from Transmitt Trigger.
 Insertion of Stuff-bit is signalled via 
\family roman
\shape italic
data_halt
\family default
\shape default
 signal which is used to suspend Protocol Control State machine for one
 Bit time.
 Number of equal consecutive bits is kept in 
\family roman
\shape italic
same_bits 
\family default
\shape default
counter.
 Circuit also counts number of stuffed bits modulo 8 in 
\family roman
\shape italic
stuff_ctr 
\family default
\shape default
signal.
 Module is implemented as single process.
 Decision diagram is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Bit-stuffing-logic"
plural "false"
caps "false"
noprefix "false"

\end_inset

, note that this Figure is not FSM, but rather decision tree which is evaluated
 upon clock rising edge.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/Bit_Stuffing_Logic.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bit Stuffing Logic
\begin_inset CommandInset label
LatexCommand label
name "fig:Bit-stuffing-logic"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
2.5.1.5 Bit destuffing
\end_layout

\begin_layout Description
File bitDestuffing.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in core_top.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
bitDestuffing
\end_layout

\begin_layout Standard
Bit de-stuffing module implements the functionality of Bit de-stuffing from
 serial data stream.
 The number of equal configurable via 
\family roman
\shape italic
length
\family default
\shape default
 input.
 Fixed Bit Destuffing method for CRC field of CAN FD frames is configurable
 via 
\family roman
\shape italic
fixed_stuff
\family default
\shape default
 input.
 Since CAN FD Protocol requires Fixed Stuff Bit to be discarded in the first
 bit of CRC field, Bit Destuffing circuit automatically discards first bit
 after the change on 
\family roman
\shape italic
fixed_stuff
\family default
\shape default
 input (0->1).
 Circuit processes input data with Bit Stuffing Trigger (see TODOREF) one
 clock cycle delayed from Sample trigger.
 Stuff bit discarded is signaled to Protocol Control to stop the data reception
 via 
\family roman
\shape italic
destuffed
\family default
\shape default
 signal.
 Circuit also provides number of destuffed bits modulo 8 to to Implement
 ISO FD functionality (
\family roman
\shape italic
dst_bit_ctr
\family default
\shape default
).
 Stuff Error is detected when N-th bit is not inverse preceding bit where
 N value of 
\family roman
\shape italic
length
\family default
\shape default
 input.
 When circuit is disabled, it by-passes data from input to output without
 Bit Destuffing.
 Decision diagram is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Bit-Destuffing-logic"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/Bit_Destuffing_Logic.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bit Destuffing Logic
\begin_inset CommandInset label
LatexCommand label
name "fig:Bit-Destuffing-logic"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
2.5.1.6 CRC
\end_layout

\begin_layout Description
File CRC.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in core_top.vhd
\end_layout

\begin_layout Description
Entity canCRC
\end_layout

\begin_layout Standard
CRC module implements cyclic redundancy check calculation according to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

.
 Circuit operation is started with rising edge on enable input (the circuit
 is still synchronous to 
\begin_inset Quotes eld
\end_inset

clk_sys
\begin_inset Quotes erd
\end_inset

.
 Rising edge on 
\begin_inset Quotes eld
\end_inset

enable
\begin_inset Quotes erd
\end_inset

 input means detection of 0 to 1 transition).
 Input data are processed with 
\begin_inset Quotes eld
\end_inset

trig
\begin_inset Quotes erd
\end_inset

 input signal.
 After finishing the calculation, CRC value remains valid until next rising
 edge on 
\begin_inset Quotes eld
\end_inset

enable
\begin_inset Quotes erd
\end_inset

 input.
 The result value is propagated to outputs (
\begin_inset Quotes eld
\end_inset

crc15
\begin_inset Quotes erd
\end_inset

,
\begin_inset Quotes erd
\end_inset

crc17
\begin_inset Quotes erd
\end_inset

,
\begin_inset Quotes erd
\end_inset

crc21
\begin_inset Quotes erd
\end_inset

 signals) of the circuit.
 All three CRC values are calculated at the same time.
 CRC calculation is implemented via shift register in order to avoid long
 combination paths.
 Since ISO FD and Non-ISO are different in the highest bit of shift register
 initialization, circuit is configurable via Driving bus.
 Architecture of CRC module is shown in FIgure TODO.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.2 CAN bus sampling
\end_layout

\begin_layout Description
File busSync.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in core_top.vhd
\end_layout

\begin_layout Description
Entity busSync
\end_layout

\begin_layout Standard
\noindent
CAN bus sampling circuit samples the CAN bus in the sample point.
 Optional (recommended) synchronization chain with two flip-flops is used
 to avoid metastability since 
\begin_inset Quotes eld
\end_inset

can_rx
\begin_inset Quotes erd
\end_inset

 signal is input from CAN physical layer transceiver (asynchronous signal
 from outside of FPGA/ASIC).
 The bus is sampled with sample signal from Prescaler (
\begin_inset Quotes eld
\end_inset

sample_nbt
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

sample_dbt
\begin_inset Quotes erd
\end_inset

).
 Type of sampling is set by 
\begin_inset Quotes eld
\end_inset

sp_control
\begin_inset Quotes erd
\end_inset

 input.
 
\begin_inset Quotes eld
\end_inset

Sync_edge
\begin_inset Quotes erd
\end_inset

 output signals that valid (recessive to dominant) edge has appeared on
 
\begin_inset Quotes eld
\end_inset

can_rx
\begin_inset Quotes erd
\end_inset

 input.
 Furthermore, transceiver delay measurement, and secondary sampling point
 generation are implemented in this module via two shift registers and counter.
 Transceiver delay measurement is started by 
\begin_inset Quotes eld
\end_inset

trv_delay
\begin_inset Quotes erd
\end_inset

 calib signal.
 First shift register is dedicated to storing transmitted data to compare
 it with delayed received data (bit error detection for the transmitter
 in Data bit time).
 The second shift register stores sample points generated by Prescaler thus
 providing secondary sampling point.
 Additionally, this circuit implements tripple sampling by 3 registers long
 shift register.
 A majority of 3 decoder is used with tripple sampling.
 Tripple sampling is optional and can be configured via Driving bus.
 Diagram of this module is shown in Figure TODO.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.3 Prescaler
\end_layout

\begin_layout Description
File prescaler_v3.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in core_top.vhd
\end_layout

\begin_layout Description
Entity prescaler_v3
\end_layout

\begin_layout Standard
Prescaler implements the functionality of bus timing.
 It counts Time quanta and Bit time clock.
 It contains state machine for phase of bit time (Synchronisation, Propagation,
 Phase 1, Phase 2, Reset).
 It generates synchronization signals (and appropriate delayed signals)
 and sample signals (and appropriate delayed signals).
 Synchronization signals (
\begin_inset Quotes eld
\end_inset

sync_nbt
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

sync_dbt
\begin_inset Quotes erd
\end_inset

) are used to transmit data (SYNC part of bit).
 Sample signals (
\begin_inset Quotes eld
\end_inset

sample_nbt
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

sample_dbt
\begin_inset Quotes erd
\end_inset

) are used to sample the bus (between PH1 and PH2).
 Furthermore this module covers the functionality of Hard synchronization
 and Resynchronization (
\begin_inset Quotes eld
\end_inset

sync_control
\begin_inset Quotes erd
\end_inset

 signal).
 Based on 
\begin_inset Quotes eld
\end_inset

sample_control
\begin_inset Quotes erd
\end_inset

 signal Nominal bit time or Data bit time is used\SpecialChar endofsentence
 Bit time FSM state transition
 diagram is Shown in Figure TODO.
 Block diagram of whole Prescaler module is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Bit-Time-FSM"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_Bit_time.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bit Time FSM
\begin_inset CommandInset label
LatexCommand label
name "fig:Bit-Time-FSM"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.4 Message filtering
\end_layout

\begin_layout Description
File messageFilter.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in CAN_top_level.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
messageFilter
\end_layout

\begin_layout Standard
Message filter validates received frame on output of CAN Core.
 Block diagram of Message Filter circuit is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Message-filter-block"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 If frame identifier matches one of three (A,B,C) Mask Filters or one Range
 Filter and has a valid Frame Type and Identifier Type (CAN 2.0 / CAN FD,
 BASE / EXTENDED), then 
\family roman
\shape italic
out_ident_valid
\family default
\shape default
 is set with one clock cycle delay.
 Message Filter is configured via Driving Bus from User Registers.
 In case of Mask Filter, active bits (logic 1) in configured mask (
\family roman
\shape italic
drv_filter_A_mask
\family default
\shape default
, 
\family roman
\shape italic
drv_filter_B_mask
\family default
\shape default
, 
\family roman
\shape italic
drv_filter_C_mask
\family default
\shape default
) are compared between RX Identifier (
\family roman
\shape italic
rec_ident_in
\family default
\shape default
) and filter settings (
\family roman
\shape italic
drv_filter_A_bits
\family default
\shape default
, 
\family roman
\shape italic
drv_filter_B_bits
\family default
\shape default
, 
\family roman
\shape italic
drv_filter_C_bits
\family default
\shape default
).
 Received Frame Type (
\family roman
\shape italic
frame_type
\family default
\shape default
) and Identifier Type (
\family roman
\shape italic
ident_type
\family default
\shape default
) are compared with accepted Frame and Identifier types (
\family roman
\shape italic
drv_filter_A_ctrl
\family default
\shape default
, 
\family roman
\shape italic
drv_filter_B_ctrl
\family default
\shape default
, 
\family roman
\shape italic
drv_filter_C_ctrl
\family default
\shape default
).
 Range Filter converts Received Identifier to decimal value (
\family roman
\shape italic
rec_ident_dec
\family default
\shape default
) and compares whether it is between Lower Range Threshold (
\family roman
\shape italic
drv_filter_ran_lo_th
\family default
\shape default
) and Upper Range Threshold (
\family roman
\shape italic
drv_filter_ran_hi_th
\family default
\shape default
).
 The output is valid if identifier matches at least one filter (logic OR).
 Message Filters are configurable before synthesis via 
\family roman
\shape italic
sup_filtA
\family default
\shape default
, 
\family roman
\shape italic
sup_filtB
\family default
\shape default
, 
\family roman
\shape italic
sup_filtC
\family default
\shape default
 and 
\family roman
\shape italic
sup_range
\family default
\shape default
 generics.
 If filter is not synthesized (generic set to 
\family roman
\shape italic
false
\family default
\shape default
), then the outcome of filter is as if the filter is not passing.
 If no filter is synthesized (all generics set to false), the output of
 Message Filter is set to 
\family roman
\shape italic
true
\family default
\shape default
, accepting every Received Frame.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/Message_filter_block_diagram.pdf
	lyxscale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Message Filter block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Message-filter-block"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.5 RX Buffer 
\begin_inset CommandInset label
LatexCommand label
name "subsec:2.3.10-RX-buffer-1"

\end_inset


\end_layout

\begin_layout Description
File rxBuffer.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in CAN_top_level.vhd
\end_layout

\begin_layout Description
Entity rxBuffer
\end_layout

\begin_layout Standard
RX Buffer implements FIFO RAM memory for storing received CAN frames.
 Block diagram of RX Buffer is shown in FIgure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RX-buffer-block"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Basic unit of buffer is 32 bit wide word.
 Size of the buffer is configurable (generic 
\family roman
\shape italic
buff_size
\family default
\shape default
) before synthesis.
 However because of addressing logic, only powers of 2 are allowed as buffer
 size! Receive Buffer FIFO is implemented as 
\family roman
\shape italic
array
\family default
\shape default
 of 
\family roman
\shape italic
std_logic_vector
\family default
\shape default
 (signal 
\family roman
\shape italic
memory
\family default
\shape default
).
 Memory is initialized for simulation only, so that synthesis tools can
 infer Dual Port RAM memory.
 One frame in RX Buffer contains from 5 to 20 words.
 An example of CAN Frames stored in RX Buffer FIFO is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RX_Buffer-memory-layout"

\end_inset

.
 RX Buffer supports Timestamp capturing in SOF Bit or upon sucessfull reception
 of CAN Frame (end of EOF Field).
 This option can be configured by RX_SETTINGS[RTSOP] bit from SW and corresponds
 to 
\family roman
\shape italic
drv_rtsopt
\family default
\shape default
 signal.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/RX_Buffer_Block_diagram.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
RX Buffer block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:RX-buffer-block"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/RX_Buffer_layout.pdf
	lyxscale 20
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
RX Buffer memory layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RX_Buffer-memory-layout"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
CAN frame is stored continously in RAM memory of RX Buffer during frame
 reception.
 This storing is controlled by Protocol Control via signals 
\family roman
\shape italic
store_metadata
\family default
\shape default
, 
\family roman
\shape italic
store_data
\family default
\shape default
, 
\family roman
\shape italic
store_data_word
\family default
\shape default
, 
\family roman
\shape italic
rec_message_valid
\family default
\shape default
 and 
\family roman
\shape italic
rec_abort
\family default
\shape default
.
 Additional signal 
\family roman
\shape italic
sof_pulse
\family default
\shape default
 is present.
 Storing is realized via RX Buffer FSM (
\family roman
\shape italic
rx_fsm
\family default
\shape default
) which is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RX-buffer-FSM"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
Upon start of CAN Frame 
\family roman
\shape italic
sof_pulse
\family default
\shape default
 signal is given by Protocol Control and Timestamp of SOF Bit is stored
 in 
\family roman
\shape italic
timestamp_capture
\family default
\shape default
 register.
 As frame reception progresses, at the end of 
\family roman
\shape italic
control
\family default
\shape default
 state of Protocol Control, it is already clear whether unit is Transmitter
 or Receiver, all metadata are received (
\family roman
\shape italic
rec_frame_type_in
\family default
\shape default
, 
\family roman
\shape italic
rec_dlc_in
\family default
\shape default
, 
\family roman
\shape italic
rec_ident_type_in
\family default
\shape default
, 
\family roman
\shape italic
rec_ident_in
\family default
\shape default
) thus FRAME_FORMAT_W and IDENTIFIER_W can be stored.
 Protocol Control sets 
\family roman
\shape italic
store_metadata
\family default
\shape default
 for one clock cycle and RX Buffer FSM moves from 
\family roman
\shape italic
idle
\family default
\shape default
, through 
\family roman
\shape italic
rxb_store_frame_format
\family default
\shape default
, 
\family roman
\shape italic
rxb_store_identifier
\family default
\shape default
, 
\family roman
\shape italic
rxb_store_beg_ts_low
\family default
\shape default
 and 
\family roman
\shape italic
rxb_store_beg_ts_high
\family default
\shape default
 to 
\family roman
\shape italic
rxb_store_data
\family default
\shape default
 state.
 During each of the frames one word is stored in RX Buffer FIFO.
 Reception of each 4 bytes of CAN data is signalled by Protocol Control
 via 
\family roman
\shape italic
store_data
\family default
\shape default
 signal and data are present in 
\family roman
\shape italic
store_data_word
\family default
\shape default
.
 When frame reception is finsihed, 
\family roman
\shape italic
rec_message_valid
\family default
\shape default
 is activated by Protocol Control and storing of RX frame either finishes
 (
\family roman
\shape italic
rxb_idle
\family default
\shape default
) or goes through two extra state (
\family roman
\shape italic
rxb_store_end_ts_low
\family default
\shape default
, 
\family roman
\shape italic
rxb_store_end_ts_high
\family default
\shape default
) which are used to store captured Timestamp from EOF.
 If any error ocurred during reception (e.g.
 CRC mismatch or another Error Frame), storing is aborted via 
\family roman
\shape italic
rec_abort
\family default
\shape default
 signal.
\end_layout

\begin_layout Standard
RX Buffer contains two write pointers: 
\family roman
\shape italic
write_pointer
\family default
\shape default
 and 
\family roman
\shape italic
write_pointer_raw
\family default
\shape default
.
 First pointer is 
\begin_inset Quotes eld
\end_inset

real
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

committed
\begin_inset Quotes erd
\end_inset

 pointer which is available to SW, second pointer is used during storing.
 Single read pointer (
\family roman
\shape italic
read_pointer
\family default
\shape default
) is used to access the RAM from second port and read the CAN Frame.
 During storing process amount of free memory is checked and 
\family roman
\shape italic
overrun_condition
\family default
\shape default
 is active when there is an intent to write to RX Buffer RAM (
\family roman
\shape italic
write_raw_intent
\family default
\shape default
).
 Overrun condition signals that RX Buffer is full and next word can't be
 stored.
 Such a condition is captured in Internal overrun flag (
\family roman
\shape italic
data_overrun_int)
\family default
\shape default
 register and whole frame is discarded upon the end of frame storing.
 Additional flag 
\family roman
\shape italic
data_overrun_r
\family default
\shape default
 is set.
 This flag can be read from SW to find out about lost frame due to Data
 Overrun.
 When successfull frame reception is signalled (
\family roman
\shape italic
rec_frame_valid_r = '1'
\family default
\shape default
) an RX Buffer FSM is transiting from either 
\family roman
\shape italic
rxb_store_data 
\family default
\shape default
or 
\family roman
\shape italic
rxb_store_end_ts_high 
\family default
\shape default
to 
\family roman
\shape italic
rxb_idle
\family default
\shape default
, Internal overrun flag is checked.
 If no Data Overrun ocurred during storing, frame is validated and signal
 
\family roman
\shape italic
commit_rx_frame
\family default
\shape default
 is set.
 This action is considered as validation of stored frame and frame can be
 now read from SW side of RX Buffer FIFO.
 Upon this action 
\family roman
\shape italic
write_pointer_raw
\family default
\shape default
 is loaded to 
\family roman
\shape italic
write_pointer
\family default
\shape default
.
 If frame storing is aborted due to 
\family roman
\shape italic
rec_abort
\family default
\shape default
 or 
\family roman
\shape italic
data_overrun_int
\family default
\shape default
, 
\family roman
\shape italic
write_pointer_raw
\family default
\shape default
 is reset to value of 
\family roman
\shape italic
write_pointer
\family default
\shape default
.
\end_layout

\begin_layout Standard
Always one word (addressed by 
\family roman
\shape italic
read_pointer
\family default
\shape default
 signal) is on the output of circuit to be read.
 If SW reads this word 
\family roman
\shape italic
drv_read_start
\family default
\shape default
 is activated and 
\family roman
\shape italic
read_pointer
\family default
\shape default
 is automatically incremented by 1.
 Frame can be read out from RX Buffer only when RX Buffer contains at least
 one committed frame (what an unexpected information).
 This is signalled in 
\family roman
\shape italic
message_count
\family default
\shape default
 signal and 
\family roman
\shape italic
rx_empty
\family default
\shape default
 signal.
 Upon read of FRAME_FORMAT_W, additional counter (
\family roman
\shape italic
read_frame_counter
\family default
\shape default
) is set to value in RWCNT fields of FRAME_FORMAT_W.
 Upon each next read, this counter is decremented.
 When zero is reached, whole frame was read and 
\family roman
\shape italic
message_count
\family default
\shape default
 can be decremented by 1.
 Note that since Frame reception and Frame read by SW are not synchronized,
 simultaneous effect of finishing read (
\family roman
\shape italic
drv_read_start
\family default
\shape default
 and 
\family roman
\shape italic
read_frame_counter = 1
\family default
\shape default
) and committing new frame (
\family roman
\shape italic
commit_rx_frame
\family default
\shape default
) on 
\family roman
\shape italic
message_count
\family default
\shape default
 are taken into account to avoid hazards.
 Note that reading if the buffer is empty, or the frame is not yet completely
 stored, has no effect and all zeroes are returned (
\family roman
\shape italic
rx_read_buff
\family default
\shape default
).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_RX_Buffer.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
RX Buffer FSM
\begin_inset CommandInset label
LatexCommand label
name "fig:RX-buffer-FSM"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.6 Transmit buffer - Time (TXT) 
\begin_inset CommandInset label
LatexCommand label
name "subsec:2.3.10-TXT-buffer-1-1"

\end_inset


\end_layout

\begin_layout Description
File txtBuffer.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in CAN_top_level.vhd
\end_layout

\begin_layout Description
Entity txtBuffer
\end_layout

\begin_layout Standard
TXT Buffer is a module which contains one CAN frame to be transmitted.
 Block diagram of TXT Buffer is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TXT-buffer-block-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The actual implementation of CTU CAN FD contains 4 TXT Buffers, but the
 design is ready for extensions up to 8 buffers.
 Buffers are accessed via memory access to 
\begin_inset Quotes eld
\end_inset

TXT Buffer 1,2,3,4
\begin_inset Quotes erd
\end_inset

 memory regions (see TODOREF).
 Each buffer contains a state machine which controls operation of the buffer,
 and availability of data within it.
 The state machine is controlled by SW (via SW commands) and by CAN Core
 (via HW commands) and it is described in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TXT_Buffer-FSM"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/TXT_Buffer_Block_diagram.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
TXT Buffer block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:TXT-buffer-block-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Memory in the buffer is write only from SW (signal 
\family roman
\shape italic
txt_buffer_mem
\family default
\shape default
), and it is is write-only from SW.
 SW is acessing the memory via 
\family roman
\shape italic
tran_data
\family default
\shape default
, 
\family roman
\shape italic
tran_addr
\family default
\shape default
 and 
\family roman
\shape italic
tran_cs
\family default
\shape default
 signals which are driven in Memory Registers module (see TODOREF).
 Note that memory is accessible by SW only if the buffer is unlocked (
\family roman
\shape italic
txtb_user_accessible
\family default
\shape default
 signal).
 Buffer is unlocked if TXT Buffer FSM is in one of states: 
\family roman
\shape italic
txt_empty
\family default
\shape default
, 
\family roman
\shape italic
txt_error
\family default
\shape default
, 
\family roman
\shape italic
txt_aborted
\family default
\shape default
 or 
\family roman
\shape italic
txt_ok
\family default
\shape default
.
 HW (Protocol Control) is acessing the memory via 
\family roman
\shape italic
txt_addr
\family default
\shape default
 and reading data in 
\family roman
\shape italic
txt_word
\family default
\shape default
 signal.
 In these states Protocol Control is not accessing the Buffer (there is
 no transmission in progress).
\end_layout

\begin_layout Standard
SW commands on TXT Buffer can be issued via TX_COMMAND register.
 Issuing other command than supported in current state of TXT Buffer FSM
 has no effect.
 Once user sets the buffer to 
\family roman
\shape italic
txt_ready
\family default
\shape default
 via 
\family roman
\shape italic
txt_sw_cmd.set_rdy
\family default
\shape default
 CAN Core (Protocol Control) will lock the buffer as soon as CAN Bus is
 Idle (
\family roman
\shape italic
txt_hw_cmd.lock
\family default
\shape default
) and transit to 
\family roman
\shape italic
txt_tx_prog
\family default
\shape default
.
 In 
\family roman
\shape italic
txt_tx_prog
\family default
\shape default
 Protocol Control is driving 
\family roman
\shape italic
txt_addr
\family default
\shape default
 signal and reading CAN Frame Identifier and Data for transmission.
 Upon sucessull transmission of CAN Frame 
\family roman
\shape italic
txt_hw_cmd.valid
\family default
\shape default
 is activated and TXT Buffer FSM moves to 
\family roman
\shape italic
txt_tx_ok
\family default
\shape default
.
 If Arbitration is lost during transmission, 
\family roman
\shape italic
txt_hw_cmd.err
\family default
\shape default
 is signalled and buffer is moved back to 
\family roman
\shape italic
txt_ready
\family default
\shape default
.
 If CTU CAN FD reached limit of CAN Frame retransmissions (either due to
 multiple Error Frames or Arbitration loses), 
\family roman
\shape italic
txt_hw_cmd.failed
\family default
\shape default
 command is issued and TXT Buffer FSM is moved to 
\family roman
\shape italic
txt_error
\family default
\shape default
.
 SW command can also issue Abort command (
\family roman
\shape italic
txt_sw_cmd.set_abt
\family default
\shape default
) and at next Error Frame or Arbitration Loss, TXT Buffer FSM is moved to
 
\family roman
\shape italic
txt_aborted
\family default
\shape default
.
 Since there are multiple instances of TXT Buffer in each CTU CAN FD, HW
 and SW commands must be filtered for each of them.
 Buffer is uniquely distinguished by 
\family roman
\shape italic
ID
\family default
\shape default
 generic.
 SW commands distinguish between instances via 
\family roman
\shape italic
sw_cbs
\family default
\shape default
 and HW commands via 
\family roman
\shape italic
hw_cbs
\family default
\shape default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_TXT_Buffer.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
TXT Buffer state machine
\begin_inset CommandInset label
LatexCommand label
name "fig:TXT_Buffer-FSM"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.7 TX Arbitrator
\end_layout

\begin_layout Description
File txArbitrator.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in CAN_top_level.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
txArbitrator
\end_layout

\begin_layout Standard
TX Arbitrator module has three main purposes:
\end_layout

\begin_layout Itemize
Select highest priority TXT Buffer whose TXT Buffer FM is in 
\family roman
\shape italic
txt_ready
\family default
\shape default
 and can be locked for transmission.
\end_layout

\begin_layout Itemize
Compare the Timestamp from TIMESTAMP_L_W and TIMESTAMP_U_W with the external
 timestamp and signal to CAN Core, whether timestamp of highest priority
 buffer is higher than value of 
\family roman
\shape italic
timestamp
\family default
\shape default
 input.
\end_layout

\begin_layout Itemize
Load metadata from FRAME_FORMAT_W and IDENTIFIER_W from highest priority
 frame, once the CAN Frame Timestamp from TIMESTAMP_L_W and TIMESTAMP_U_W
 is higher than value of
\family roman
\shape italic
 timestamp
\family default
\shape default
 input.
 This comparison allows propagation of CAN Frame to CAN Core only when timestamp
 input becomes higher that CAN Frame Timestamp.
 In other words, CAN Frame can be transmitted only when 
\family roman
\shape italic
timestamp
\family default
\shape default
 reaches value of CAN Frame timestamp, which creates function of 
\begin_inset Quotes eld
\end_inset

send at certain time
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
TX Arbitrator block diagram is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TX-arbitrator-block-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 It contains FSM whose state transition diagram is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TX_Arbitrator-FSM-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 FSM resolves Timestamp comparisons and Metadata loads on outputs.
 Highest priority TXT Buffer is selected by Priority Decoder which is organized
 as tree and it is described in Figure TODO.
\end_layout

\begin_layout Standard
TX Arbitrator FSM (
\family roman
\shape italic
tx_arb_fsm
\family default
\shape default
) is started in 
\family roman
\shape italic
arb_sel_low_ts
\family default
\shape default
 state which selects TIMESTAMP_L_W word from TXT Buffer memory.
 TX Arbitrator is held in this state as long as there is no valid frame
 selected by Priority Decoder (
\family roman
\shape italic
select_buf_avail
\family default
\shape default
 
\family roman
\shape italic
= '0'
\family default
\shape default
).
 In this state lower part of CAN Frame timestamp is stored in 
\family roman
\shape italic
ts_low_internal
\family default
\shape default
.
 Upon selection of valid TXT Buffer (
\family roman
\shape italic
select_buf_avail
\family default
\shape default
 
\family roman
\shape italic
= '1'), 
\family default
\shape default
TX Arbitrator FSM is moved to 
\family roman
\shape italic
arb_sel_upp_ts
\family default
\shape default
 in which TIMESTAMP_L_W is adressed from TXT Buffer RAM.
 In this state Upper part of CAN Frame Timestamp is on the output of TXT
 Buffer RAM and Lower part of CAN Frame timestamp is stored in 
\family roman
\shape italic
ts_low_internal
\family default
\shape default
.
 Timestamp comparison is exeuted (
\family roman
\shape italic
timestamp_valid
\family default
\shape default
) and if 
\family roman
\shape italic
timestamp
\family default
\shape default
 has past CAN Frame Timestamp, TX Arbitrator FSM is updated to 
\family roman
\shape italic
arb_sel_ffw
\family default
\shape default
.
 If not, TX Arbitrator FSM is waiting for 
\family roman
\shape italic
timestamp
\family default
\shape default
 to pass CAN Frame Timestamp.
 In 
\family roman
\shape italic
arb_sel_ffw
\family default
\shape default
, FRAME_FORMAT_W is adressed and CAN Frame metadata are stored on the outputs
 of TX Arbitrator (
\family roman
\shape italic
tran_dlc
\family default
\shape default
, 
\family roman
\shape italic
tran_frame_type
\family default
\shape default
, 
\family roman
\shape italic
tran_ident_type
\family default
\shape default
, 
\family roman
\shape italic
tran_is_rtr
\family default
\shape default
).
 Frame is marked as valid (
\family roman
\shape italic
tran_frame_valid_com
\family default
\shape default
) for CAN Core.
 Note that validity of output frame is logic AND between tran_frame_valid_com
 and combinationally selected value by Priority Decoder.
 This fact is important due to hazard protection and it is further explained
 in TODOREF.
 Upon change of Index of selected TXT Buffer, TX Arbitrator FSM is restarted
 (
\family roman
\shape italic
select_buf_index_reg /= select_buf_index
\family default
\shape default
) and selection process repeats.
 This architecture guarantees that CAN Frame from highest Priority TXT Buffer
 is propagated for transmission.
 If Protocol Control gives Lock command (
\family roman
\shape italic
txt_hw_cmd.lock
\family default
\shape default
) TX Arbitrator FSM moves to 
\family roman
\shape italic
arb_locked
\family default
\shape default
 and no frame selection is stopped until 
\family roman
\shape italic
txt_hw_cmd.unlock
\family default
\shape default
 is signalled.
 Index of actually selected buffer for transmission is always stored in
 
\family roman
\shape italic
int_txtb_index
\family default
\shape default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/TX_Arbitrator_Block_diagram.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
TX Arbitrator block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:TX-arbitrator-block-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Each state of TX Arbitrator which is addressing word in TXT Buffer memory
 contains wait state (
\family roman
\shape italic
fsm_wait_state
\family default
\shape default
) due to which each state waits one additional clock cycle before processing
 data from TXT Buffer.
 This wait state is necessary since output of TXT Buffer RAM is clocked
 and it takes one clock cycle to provide the data after 
\family roman
\shape italic
txtb_ptr
\family default
\shape default
 was set.
 Selection process goes through 3 States of TX Arbitrator with single clock
 cycle wait state in each of the states.
 This creates delay of 6 clock cycle between TXT Buffer is set to 
\family roman
\shape italic
txt_ready
\family default
\shape default
 and TX Frame is selected for transmission.
 Note that with 100 MHz clock, this creates delay of 60 ns which is far
 below maximum Nominal Bit Time length (1000 ns), and thus it does not impose
 any restrictions on time sensitive CAN applications as TTCAN.
 Since TX Arbitrator (during reading TIMESTAMP_U_W, TIMESTAMP_L_W and FRAME_FORM
AT_W) and Protocol Control (during frame transmission) need data from TXT
 Buffer memory, final pointer to memory is multiplexed between 
\family roman
\shape italic
txtb_pointer_meta
\family default
\shape default
 and 
\family roman
\shape italic
txtb_core_pointer
\family default
\shape default
.
 When frame is not yet selected, buffer is addressed with 
\family roman
\shape italic
txtb_pointer_meta
\family default
\shape default
 .
 Once frame is selected and TX Arbitrator FSM is 
\family roman
\shape italic
arb_locked
\family default
\shape default
, 
\family roman
\shape italic
txtb_core_pointer
\family default
\shape default
 is used.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_TX_Arbitrator.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
TX Arbitrator state machine
\begin_inset CommandInset label
LatexCommand label
name "fig:TX_Arbitrator-FSM-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.8 Interrupt manager
\end_layout

\begin_layout Description
File intManager.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in CAN_top_level.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
intManager
\end_layout

\begin_layout Standard
Interrupt manager provides interrupt via 
\family roman
\shape italic
int
\family default
\shape default
 / 
\family roman
\shape italic
irq
\family default
\shape default
 output of CTU CAN FD IP Core.
 Interrupts are configurable from memory registers via Driving Bus.
 Interrupts manager captures interrupt on events (
\family roman
\shape italic
int_input_active
\family default
\shape default
) in CAN Core into DQ Flip-Flop 
\family roman
\shape italic
int_vect_reg
\family default
\shape default
.
 Events are captured only if particular interrupt is un-masked (
\family roman
\shape italic
int_mask_reg(i) = '0'
\family default
\shape default
).
 Interrupt manager generates 
\family roman
\shape italic
int
\family default
\shape default
 / 
\family roman
\shape italic
irq
\family default
\shape default
 output by logic OR function between all elements of interrupt vector.
 To allow generation of Inerrupt by active bit in 
\family roman
\shape italic
int_vect_reg
\family default
\shape default
, interrupt must be enabled (
\family roman
\shape italic
int_ena_reg
\family default
\shape default
).
 Interrupt output is deactivated (logic 0) as soon as the Interrupt Status
 is cleared.
 Structure of Interrupt registers is selected to achieve accesibility from
 multiple threads / processes under OS, without necessity of using locking
 mechanisms such as mutexes or semaphores.
 Interrupt structure is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:INT-manager-block-1-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/Interrupt_Block_diagram.pdf
	lyxscale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interrupt Manager block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:INT-manager-block-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.9 Memory registers
\begin_inset CommandInset label
LatexCommand label
name "subsec:2.5.9-Memory-registers"

\end_inset


\end_layout

\begin_layout Description
File canfd_registers.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in CAN_top_level.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
canfd_registers
\end_layout

\begin_layout Standard
Memory Registers provide the interface between SoC Memory Bus (Avalon or
 APB) and all control and Status signals of CTU CAN FD IP function.
 Address decoder for access to TXT Buffers is implemented in this module.
 Driving bus assignments are implemented in this module.
 Register structure is in described in Chapter 3 TODOREF.
 Frame Format in TXT Buffers and RX Buffer is described in Chapter 4 TODOREF.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
2.5.10 Event logger (optional) 
\begin_inset CommandInset label
LatexCommand label
name "subsec:2.3.10-Event-logger"

\end_inset


\end_layout

\begin_layout Description
File logger.vhd
\end_layout

\begin_layout Description
Used
\begin_inset space ~
\end_inset

in CAN_top_level.vhd
\end_layout

\begin_layout Description
Entity 
\family roman
\shape italic
CAN_logger
\end_layout

\begin_layout Standard
Event logger is module capturing events on the CAN bus with its timestamps.
 FIFO memory is implemented with configurable size (generic 
\begin_inset Quotes eld
\end_inset

memory_size
\begin_inset Quotes erd
\end_inset

).
 Event logger implements the state machine with 
\begin_inset Quotes eld
\end_inset

CONFIG
\begin_inset Quotes erd
\end_inset

 state which is dedicated to reading out previously logged data, configuring
 triggering and capturing event types.
 When command is given (via Driving bus, see register LOG_COMMAND description)
 state machine is moved to 
\begin_inset Quotes eld
\end_inset

READY
\begin_inset Quotes erd
\end_inset

 state where it is waiting for triggering condition to move to 
\begin_inset Quotes eld
\end_inset

RUNNING
\begin_inset Quotes erd
\end_inset

 state.
 In 
\begin_inset Quotes eld
\end_inset

RUNNING
\begin_inset Quotes erd
\end_inset

 state, events are being captured along with its time stamp and additional
 information (see register EVENT_TYPE description).
 When the memory is full circuit automatically moves to 
\begin_inset Quotes eld
\end_inset

CONFIG
\begin_inset Quotes erd
\end_inset

 state and sets 
\begin_inset Quotes eld
\end_inset

logger_finished
\begin_inset Quotes erd
\end_inset

 output.
 From 
\begin_inset Quotes eld
\end_inset

READY
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

RUNNING
\begin_inset Quotes erd
\end_inset

 state, circuit operation can be aborted via driving bus.
 The event logger diagram is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Event_logger"

\end_inset

.
\end_layout

\begin_layout Standard
Event logger implements so called 
\begin_inset Quotes eld
\end_inset

Event harvesting
\begin_inset Quotes erd
\end_inset

 mechanism.
 Since there are many events sources in the Status bus, several events can
 occur at once! Any events that occur are stored in an internal register
 in the first clock cycle.
 In next up to N clock cycles (N is the amount of simultaneous events) events
 are written to the logger memory.
 If any other event occurs (of the same type) during these N cycles it is
 not logged.
 Due to the nature of the system, it is very improbable that repeated event
 will happend in e.g.
 4 clock cycles.
 
\end_layout

\begin_layout Standard
This circuit provides additional testing capability beyond the CAN FD specificat
ion.
 Events can be read out from memory from EVENT_INFO_1 and EVENT_INFO_2 register.
 The event at the position of 
\begin_inset Quotes eld
\end_inset

read_pointer
\begin_inset Quotes erd
\end_inset

 is read out.
 Read_pointer position can be manipulated via LOG_CMD register.
 
\end_layout

\begin_layout Standard
FIFO Memory is implemented in the same way as RX Buffer memory.
 It is un-initialized during reset which allows ALTERA Synthesis tools to
 infer native RAM memory.
 Additional vector 
\begin_inset Quotes eld
\end_inset

memory_valid
\begin_inset Quotes erd
\end_inset

 is stored which contains information about the state of the memory row,
 so it is possible to achieve erase-on-reset behaviour from user perspective.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/FSM_event_logger.pdf
	lyxscale 20
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Event logger state machine
\begin_inset CommandInset label
LatexCommand label
name "fig:Event_logger"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
2.6 Information processing time
\end_layout

\begin_layout Standard
CAN standard defines information processing time (IPT) which can be different
 for every implementation of CAN controller.
 IPT determines how many clock cycles CAN controller needs after sampling
 bus value, before determining following bit value.
 Implementation of CTU CAN FD IP core is based on Triggering Signals as
 explained in TODOREF.
 For sampling, three triggering signals are used.
 These signals are mutually delayed by one clock cycle (Sample Trigger,
 Bit Destuffing Trigger, Receive Trigger).
 This gives the minimal duration of PH2 to 4 clock cycles (one more cycle
 is needed to update internal registers of Fault Confinement and Protocol
 Control).
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab: IPT_reqs"

\end_inset

 shows minimal Bit Time settings in relation to Prescaler settings.
 Triggering Signals (TX and RX) in this corner case are shown in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Minimal_bit_time"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Min.
 Prop+Ph1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Min Ph2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Information processing time requirements
\begin_inset CommandInset label
LatexCommand label
name "tab: IPT_reqs"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Minimal_IPT.png
	lyxscale 20
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Minimal Bit Time
\begin_inset CommandInset label
LatexCommand label
name "fig:Minimal_bit_time"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
From Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab: IPT_reqs"

\end_inset

 theoretical maximum Bit Rate in Data phase of CAN Frame can be calculated.
 Assuming we have Prescaler set to 1, length of all bit segments together
 is 7 and clock is 100 MHz, CTU CAN FD IP Core reaches 14,7 Mbit/s Bit Rate.
 Note that this situation is theoretical maximum, and since timing conditions
 are very tight, synchronization errors can appear.
 This configuration was tested (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:4.7-Sanity-test"

\end_inset

- Sanity test) in simulation and one such a frame is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Max_bitrate-1"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/14Mbit_20m_Star.png
	lyxscale 20
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Frame with Maximum Bit Rate
\begin_inset CommandInset label
LatexCommand label
name "fig:Max_bitrate-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
2.6 Error detection architecture
\end_layout

\begin_layout Section
2.6 TXT Buffer hazard resolution
\end_layout

\begin_layout Section
2.6 Node restart after Bus-off
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "registerMap.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "CANFrameFormat.lyx"

\end_inset


\end_layout

\begin_layout Chapter
5.
 Testbench
\end_layout

\begin_layout Standard
CAN FD IP Core is tested in the dedicated testing framework (CANTest) implemente
d in VHDL, TCL and Python.
 It provides automated, randomized and reproducible RTL tests.
 CANTest always follows a simple rule: Each test must have
\series bold
 exact result
\series default
 whether the test passed or failed! Vunit library is used as wrapper and
 GHDL and Modelsim Altera 6.5b are used as target simulators.
 Tests are executed automatically after every merge request to master branch
 of CTU FEE GITLab repository.
 Furthermore, automated test run is available every night.
\end_layout

\begin_layout Standard
All source codes of CANTest are located in 
\series bold
testbench
\series default
 directory.
 CANTest can be started from Linux terminal by running script 
\series bold
run.py <config_name> 
\series default
where <config_name> corresponds to YAML config with tests that should be
 executed.
 Description of each test and its configuration is shown in following sub-chapte
rs.
 At the moment there are two configs available:
\end_layout

\begin_layout Description
tests_fast.yml Fast test run which is executed in GitLab CI on every merge
 request.
\end_layout

\begin_layout Description
tests_nightly.yml Longer test run which is executed every 24 hours in GitLab
 CI.
\end_layout

\begin_layout Standard
CANTest framework implements 
\series bold
4 types of tests
\series default
:
\end_layout

\begin_layout Itemize
Unit tests test each circuit towards its expected functionality.
\end_layout

\begin_layout Itemize
Feature tests test the functionality of controller as whole in specific
 situations.
\end_layout

\begin_layout Itemize
Sanity test implements various bus topologies and simulates bus traffic
 with more controllers.
\end_layout

\begin_layout Itemize
Reference test verifies communication with existing CAN FD implementations.
\end_layout

\begin_layout Standard
By default, tests are executed via GHDL simulator.
 An example of test command for fast test run is:
\end_layout

\begin_layout Quotation
run.py test tests_fast.yml
\end_layout

\begin_layout Standard
To use Modelsim as simulator (for manual debug with graphic wave output),
 following command can be used:
\end_layout

\begin_layout Quotation
VUNIT_SIMULATOR=modelsim ./run.py test tests_fast.yml -- -g
\end_layout

\begin_layout Section
4.1 VHDL Test libraries
\end_layout

\begin_layout Subsection
4.1.1 CANTestlib.vhd
\end_layout

\begin_layout Standard
CANtestLib.vhd provides set of types and procedures which aim to ease the
 test implementation and debugging.
 CANtestLib provides set of HAL functions which access CTU CAN FD and configure
 its functionality.
 During test implementation, it is recommended to use HAL wrappers as much
 as possible instead of direct register access!
\end_layout

\begin_layout Subsection
4.1.2 randomLib.vhd
\end_layout

\begin_layout Standard
Random lib contains custom functions for generation of random numbers.
 File 
\series bold
randomlib.vhd
\series default
 contains pre genreated array and set of procedures for returning random
 elements.
 This array of numbers was generated by Matlab and has 
\series bold
Uniform distribution
\series default
 of values from the interval (0,1).
 Functions from the library provide values from generated array in a form
 of std_logic or std_logic vector.
 Additional function (rand_gaus) provides random numbers with a Gaussian
 distribution.
 To obtain random element (vector, bit, etc.) signal 
\series bold
rand_ctr
\series default
 needs to be provided.
 This signal represents an index of the returned element (from generated
 array) and is automatically increased when the procedure ends.
 Note that this approach provides only pseudo-random number generation,
 but it is sufficient for the purpose of CANTest framework.
 By increasing the size of generated array quality of random number generation
 is also increased.
 Actual size of the generated array is 3000 elements in range 0 to 1.
 There is one major disadvantage of this approach.
 When random number generation is used from several processes, more rand_ctr
 signals are needed.
 Basic test entity has one implicit signal rand_ctr defined for this purpose.
\end_layout

\begin_layout Section
4.2 Test entities
\end_layout

\begin_layout Standard
In order to unify all tests of CANTest, 
\series bold
CAN_feature_test
\series default
 entity is implemented, and it is described in following table:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Source file
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CANtestlib.vhd
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Instanced in
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
every test
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Entity name
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAN_test
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Description
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" width="17cm">
\begin_inset Text

\begin_layout Plain Layout
\noindent
\begin_inset VSpace defskip
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 1
use_makebox 0
width "95col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Basic test entity.
 Provides common test parameters for all tests.
 Each test is intended to implement architecture of this entity.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset VSpace defskip
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Ports
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
run
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Starting signal for the test
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
iterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natural
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of iterations to be executed in one test run
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
log_level
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
log_lvl_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Logging severity which should be reported.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
error_beh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
err_beh_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specifies how does the test behave when error occurs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
error_tol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natural
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximal amount of errors which does not cause test to fail
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
status
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
test_status_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actual status of the test.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
errors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natural
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error counter of the test
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
4.3 Python test framework
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Section
4.4 Simulator settings
\end_layout

\begin_layout Standard
CANTest framework is using some simulator settings which are not default.
 These settings are required for proper functionality:
\end_layout

\begin_layout Itemize
default time unit is 
\begin_inset Quotes eld
\end_inset

fs
\begin_inset Quotes erd
\end_inset

 instead of 
\begin_inset Quotes eld
\end_inset

ns
\begin_inset Quotes erd
\end_inset

.
 This setting is needed to simulate precise oscillator tolerance!
\end_layout

\begin_layout Section
4.5 Unit tests
\end_layout

\begin_layout Standard
Unit tests verify functionality of each circuit on its own, and compare
 it with expected beahviour.
 Expected behaviour is implemented in behavioral manner (as circuit model
 or verification function).
 It is important that circuit implementation and behavioral model of the
 circuit are very well separated and share as little source code as possible!
 Basic architecture of each unit test is in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Unit_diagram"

\end_inset

 and can be summed up to following points:
\end_layout

\begin_layout Enumerate
Generate constrained random inputs to DUT (Device under test).
\end_layout

\begin_layout Enumerate
Observe circuit function.
\end_layout

\begin_layout Enumerate
Compare outputs of the circuit and outputs of the model, or evaluation function.
\end_layout

\begin_layout Enumerate
If a mismatch occurs increase error counter and report error log.
\end_layout

\begin_layout Enumerate
Repeat steps 1 to 4 until a certain number of iterations was reached.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/unit_test_diagram.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Unit test principle
\begin_inset CommandInset label
LatexCommand label
name "fig:Unit_diagram"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Each unit test has its own TCL script which adds the most important waveforms
 to Wave window of Modelsim simulator.
 This Wave file is used for manual debugging of circuit or a test.
\end_layout

\begin_layout Standard
Each unit test must be located in a separate directory under 
\series bold
unit
\series default
 directory.
 The test directory (e.g CRC) must contain one 
\series bold
VHDL file
\series default
 which implements test architecture.
 TCL file with waveform configurations is optional, and it is mostly used
 for manual debugging of a test or circuit.
 Each unit test requires a separate run of simulator since each unit test
 implements different DUT, thus simulated architecture is distinct in each
 unit test.
\end_layout

\begin_layout Subsection
4.5.2 How to add a new unit test?
\end_layout

\begin_layout Standard
Following steps are recommended when creating new unit test in CANTest:
\end_layout

\begin_layout Enumerate
Create a new folder in unit folder.
\end_layout

\begin_layout Enumerate
Implement test as an architecture of 
\begin_inset Quotes eld
\end_inset

CAN_test
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Copy existing TCL script from some unit test and modify the waveforms to
 be observed.
\end_layout

\begin_layout Enumerate
Add test to one of config files and execute test run.
\end_layout

\begin_layout Subsection
4.5.3 Existing unit tests
\end_layout

\begin_layout Subsubsection
Bit_Stuffing
\end_layout

\begin_layout Standard
This unit test includes the unit test of Bit stuffing and bit de-stuffing
 circuit as well.
 Both circuits are connected in a chain.
 As first, random bit is generated then stuffed, then de-stuffed and received.
 Testbench generates random setting on the input of both circuits.
 Note that both circuits always have the same settings.
 Stuff error detection is verified by forcing the value of stuffed bits
 to be constant for more bit times than length of the stuff rule.
 De-stuffed data and data before stuffing are compared and when a mismatch
 occurs error is detected.
\end_layout

\begin_layout Subsubsection
Bus_Sampling
\end_layout

\begin_layout Standard
Testbench generates random data sequences to be transmitted (as if coming
 from CAN Core) and appropriate triggering signals (with random bit time
 settings).
 Transmitted data on DUT output are inserted into the shift register that
 is realizing transceiver delay (also randomized).
 Random errors are inserted into the shift register.The test has 3 parts.
 In the first part, nominal sampling is used and sampled data are compared
 with transmitted data.
 Also, bit error output is observed.
 If transmitted and sampled data are mismatching and bit_error output is
 an inactive error is detected.
 In the second part data sampling is used, but test sequence remains the
 same as in first part.
 In third part, secondary sampling is used and additional shift register
 is implemented in the test which stores the transmitted data.
 In the beginning of the third part transceiver delay is measured by command
 (as commin from protocol control in EDL bit).
 Then received data and delayed transmitted data are compared.
 Transmitted data are delayed by the length of measured transceiver delay.
 If a mismatch occurs and bit_error output is not set by DUT error is detected.
 Note that in the beginning of the third part no bit errors are generated
 during the time when transceiver delay is being measured.
 Also, only RECESSIVE bits are generated for a short period at the beginning
 of the third part.
 This is to simulate the condition that during EDL bit nominal bit time
 is still used and transceiver delay is shorter than a nominal bit time.
 Refer to source code of the test for more detailed explanation.
\end_layout

\begin_layout Subsubsection
CRC
\end_layout

\begin_layout Standard
CRC unit test generates random bit sequence 10 to 620 bits long.
 It also generates random drv_fd_type setting.
 According to ISO FD standard, there is different starting value in CRC
 shift register in ISO CAN protocol as in non-ISO CAN protocol.
 Signal 
\begin_inset Quotes eld
\end_inset

drv_fd_type
\begin_inset Quotes erd
\end_inset

 switches between these two options.
 Then CRC is calculated in software by 
\begin_inset Quotes eld
\end_inset

calc_crc
\begin_inset Quotes erd
\end_inset

 procedure.
 Afterwards, bit sequence is applied to DUT input.
 Triggering signals are generated by testbench and serial data are processed
 by CRC circuit.
 At the end software calculated CRC and DUT output are compared.
 If these two are not equal, an error is detected.
\end_layout

\begin_layout Subsubsection
Evnt_Logger
\end_layout

\begin_layout Standard
Testbench generates random event inputs on Status bus in 
\begin_inset Quotes eld
\end_inset

ev_gen
\begin_inset Quotes erd
\end_inset

 process.
 Main test process then generates random setting of event logger (random
 event type of recording) and starts logging the events (starts DUT as an
 user would do).
 After recording has finished it reads all events and checks whether only
 desired event types were recorded.
 If any other event is recorded error is detected.
 
\end_layout

\begin_layout Subsubsection
Int_Manager
\end_layout

\begin_layout Standard
This testbench is generating random interrupt sources at any time.
 Periodically it generates random DUT settings on Driving bus.
 After settings are set, testbench waits for constrained random time.
 During this time int_counter process is counting how many interrupts are
 fired by DUT.
 int_emul process implements interrupt generation in a behavioral way and
 counts the expected interrupts in another counter.
 After testbench waits it evaluates whether two counters (acutal interrupts
 and expected interrupts) are equal and whether interrupt vector on output
 of DUT is equal to expected interrupt vector.
 If any of these two pairs are not equal, error is detected.
\end_layout

\begin_layout Subsubsection
Message_filter
\end_layout

\begin_layout Standard
Random input frame type and identifier are generated on the input of DUT.
 These inputs emulate received frame from CAN Core.
 Also, random filter settings are generated on a Driving bus.
 Testbench waits for one clock cycle since there is one Flip-Flop on the
 output of message filter circuit.
 Then validate function is called which compares DUT output and expected
 output.
 Validate function implements the behavioral functionality of Message filters.
 If false is returned then an error is detected.
\end_layout

\begin_layout Subsubsection
Prescaler
\end_layout

\begin_layout Standard
Prescaler testbench generates random bit time setting on the input of DUT.
 Afterwards, synchronization and sampling signals are observed on the output
 of DUT.
 It is verified that triggering signals are always interleaving (sync,sample,syn
c...).
 Minimal information processing time (4 clock cycles) is also verified by
 
\begin_inset Quotes eld
\end_inset

ipt_proc_check
\begin_inset Quotes erd
\end_inset

 process.
 Length between generated triggers is observed and compared to a reference
 value.
 If any mismatch occurs error is detected.
 This unit test implements signal generation without synchronization.
\end_layout

\begin_layout Subsubsection
Protocol_Control
\end_layout

\begin_layout Standard
Protocol control unit test is so far the most complex unit test in CANTest.
 Its architecture is shown in a header of testbench itself.
 Random frame is generated on a input of DUT.
 From this frame expected bit sequence is calculated by 
\begin_inset Quotes eld
\end_inset

gen_sw_CAN
\begin_inset Quotes erd
\end_inset

 procedure.
 This procedure de-facto creates software implementation of CAN FD protocol.
 After generated frame is applied on the input of DUT,a frame is transmitted
 by DUT1.
 CAN bus level is monitored and bit sequence is recorded.
 Another DUT (DUT2) receives the frame and sends the acknowledge.
 After the transmission expected and recorded bit sequence are compared.
 If there is any mismatch error is detected.
 Also, recieved frame on the output of DUT2 is compared with an original
 generated frame and mismatch also indicates an error.
 Note that transmitted bit sequence does not include stuff bits since stuff
 bits are inserted outside of Protocol control! Fixed value of CRC is transmitte
d by DUT1 as well as Stuff count field in ISO FD frames.
\end_layout

\begin_layout Subsubsection
RX_Buffer
\end_layout

\begin_layout Standard
RX Buffer unit test simulates incoming frames from CAN Core.
 Stimuli generator (stim_gen process) generates random CAN frames on the
 input of RX Buffer as if coming from CAN Core.
 Any frame that is stored into the RX Buffer is also stored to testbench
 memory in_mem.
 It is observed whether the frame was not discarded by the RX buffer due
 to lack of free memory in RX Buffer.
 Another process data_reader reads the data on the output of the frame as
 an user would do by memory access.
 Frames which are read on output are stored into testbench memory out_mem.
 When both memories (in_mem and out_mem) are filled its content is compared
 and error is detected at any mismatch.
 Furthermore, testbench keeps it own statistics of the buffer size and free
 memory based on stored frame size.
 If a frame is stored but buffer should not have enough space or frame is
 discarded but buffer should have enough space, an error is also detected.
 Additionally if Buffer is empty for too long then an error is detected.
 The testbench is designed that buffer is at constant usage and buffer should
 never be empty for too long.
\end_layout

\begin_layout Subsubsection
TX_Arbitrator
\end_layout

\begin_layout Standard

\color black
TX_Arbitrator testbench independently generates inputs to the TX Arbitrator
 in input_gen process.
 Since the whole circuit is only combinational it provides immediate (in
 RTL) result.
 Main test process loop compares the DUT result with expected output via
 
\begin_inset Quotes eld
\end_inset

check_output
\begin_inset Quotes erd
\end_inset

 procedure.
 
\begin_inset Quotes eld
\end_inset

Check_output
\begin_inset Quotes erd
\end_inset

 procedure implements a behavioural version of TX arbitrator circuit.
 If any difference between DUT output and expected output occurs, an error
 is detected.
\end_layout

\begin_layout Subsubsection

\color black
TX_Buffer
\end_layout

\begin_layout Standard

\color black
TXT buffer unit test instantiates two DUTs with IDs 1 and 2 as in CAN FD
 IP.
 The difference is that one TXT buffer is set to support FD frames, the
 other is set not to support FD frames (up to 512 bits of data).
 Testbench generates inputs of DUTs in data_gen_proc process.
 Once any buffer is empty random input is applied to DUTs and stored to
 the buffer which is empty.
 Testbench also stores the frame into two auxiliarly signals small_mem and
 big_mem (one for each frame).
 After data are stored testbench waits for short random time.
 Main test process periodically reads out the contents of DUTs as long as
 any of DUTs is signalling that it is not empty.
 When data are read out, output of DUT is compared with either small_mem
 or big_mem memory.
 When any mismatch occurs error is detected.
\end_layout

\begin_layout Section
4.6 Feature tests
\end_layout

\begin_layout Standard
Feature tests always test a functionality of CAN controller which is created
 by cooperation of more circuits and thus can not be tested in a unit test.
 An architecture of feature tests is different than in unit tests.
 First of all feature tests have only one test environment, located in feature/f
eature_env.vhd.The architecture of this test is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Feature_env"

\end_inset

.
 Two separate CAN controllers are instantiated and connected to the bus.
 Fixed transceiver delay is emulated (20 clock cycles).
 Feature tests contain two separate clock sources with 0 ppm and 100 ppm
 oscillator tolerance.
 Each clock source is connected to one CAN controller.
 Test interface to this environment is via two Avalon buses, one for each
 CAN controller.
 Note that feature tests implement only one architecture of CAN_test (more
 exactly CAN_feature test with some additional signals) and one architecture
 of CAN_test_wrapper.
 Due to this architecture, it is not necessary to restart the simulator
 at the start of the new test.
 All feature tests share two DUTs (two CAN controllers).
 Both nodes in feature test environment are configured with default values
 of Bit time registers.
 It is recommended not to modify this configuration.
 Several existing feature tests rely on default configuration for their
 proper function.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/Feature_env.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feature test environment
\begin_inset CommandInset label
LatexCommand label
name "fig:Feature_env"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Each feature test is implemented in a standalone package.
 This package contains procedure with assignments to memory buses and observatio
ns of bus values or internal signals.
 Each procedure is called from 
\series bold
exec_feature_test
\series default
 procedure in main test loop.
 Correct feature test procedure is selected based on the value in signal
 
\begin_inset Quotes eld
\end_inset

test_name
\begin_inset Quotes erd
\end_inset

.
 This signal is set in the beginning of each feature test execution.
 
\end_layout

\begin_layout Subsection
4.6.1 How to run feature tests?
\end_layout

\begin_layout Standard
Since it is possible to execute several feature tests in the row without
 exiting simulation it is possible to cascade feature tests.
 Configuration file
\series bold
 feature_config.tcl
\series default
 contains feature tests which will be run during each run.
 This file defines TCL list 
\series bold

\begin_inset Quotes eld
\end_inset

FEATURE_FIFO
\series default

\begin_inset Quotes erd
\end_inset

.
 Each entry of the list is another list.
 Entries of sub-lists have following meaning:
\end_layout

\begin_layout LyX-Code

\series bold
list <test_name> <iterations>
\end_layout

\begin_layout Standard

\color black
Where 
\series bold
<test_name>
\series default
 is the name of the feature test which will be executed as part of feature
 test run.
 Name of the feature test must be corresponding to the name of VHDL file
 where feature test package is implemented without 
\begin_inset Quotes eld
\end_inset

_feature_tb.vhd
\begin_inset Quotes erd
\end_inset

 suffix.
 Name of the feature test is also used in test implementation.
 Name of the test right-padded to 20 characters is used as unique identification
 string for the test in 
\begin_inset Quotes eld
\end_inset

exec_feature_test function.
 List of all available tests (possible <test_name> values) is in following
 subsections.
 
\series bold
<iterations>
\series default
 is parameter stating how many times should this feature test be executed.
 
\color inherit
Example of such a configuration file is in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:feature_config_example-1-1-1-1-1-1"

\end_inset

.
\end_layout

\begin_layout Standard
Following command prints the content of configuration file to the command
 line
\end_layout

\begin_layout LyX-Code

\series bold
\color black
test
\begin_inset space \space{}
\end_inset

feature
\begin_inset space \space{}
\end_inset

print_config
\end_layout

\begin_layout Standard
Simulator with feature test environment can be started either manually or
 by command:
\end_layout

\begin_layout LyX-Code

\series bold
\color black
test
\begin_inset space \space{}
\end_inset

feature
\begin_inset space \space{}
\end_inset

start
\end_layout

\begin_layout Standard
After simulator is started test only needs to get signal to run via the
 following command:
\end_layout

\begin_layout LyX-Code

\series bold
\color black
test
\begin_inset space \space{}
\end_inset

feature
\begin_inset space \space{}
\end_inset

run
\end_layout

\begin_layout Standard
Always the most actual value of the config will be executed.
 After modification of configuration file it might be necessary to restart
 CANTest framework (type exit in CANTest and re-run Run_test_framework.tcl).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Feature_config.png
	lyxscale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feature test example configuration
\begin_inset CommandInset label
LatexCommand label
name "fig:feature_config_example-1-1-1-1-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
4.6.2 How to add new feature test?
\end_layout

\begin_layout Standard
Following steps must be taken when new feature test is added:
\end_layout

\begin_layout Enumerate
Create a new VHDL package (based on existing feature test) in feature directory.
\end_layout

\begin_layout Enumerate
Rename the package to have a unique name.
 Rename the procedure in the package accordingly.
\end_layout

\begin_layout Enumerate
Implement the feature test procedure by executing behavioral accesses into
 the Controller 1 and Controller 2 of feature test environment.
 The variable 
\begin_inset Quotes eld
\end_inset

outcome
\begin_inset Quotes erd
\end_inset

 must be set to true if the test passed and to false if the test failed.
 One execution of the procedure corresponds to one iteration of the test.
\end_layout

\begin_layout Enumerate
Include the package in feature_env.vhd.
 
\end_layout

\begin_layout Enumerate
Add new 
\begin_inset Quotes eld
\end_inset

elsif
\begin_inset Quotes erd
\end_inset

 branch into procedure exec_feature_test.
 The new branch will execute your function.
 Do not forget to change the string to be compared with test_name signal.
 This string must be 20 characters right padded unique name.
 It is the same name as is used in 
\series bold
feature_config.tcl
\series default
 configuration file.
 The implementation of CANtest framework uses 
\series bold
force
\series default
 TCL command to set the test_name signal when execution of next feature
 test starts.
 From now on new feature test can be executed as any other feature test.
\end_layout

\begin_layout Subsection
4.6.3 Existing feature tests
\end_layout

\begin_layout Subsubsection
abort_transmittion
\end_layout

\begin_layout Standard
Abort transmission tests the option to abort frame transmission by a write
 to user registers.
 A frame is generated and inserted for transmission.
 Abort command is generated and Protocol control state machine is checked.
 It should immediately move to Interframe state.
 If no then an error is detected.
 
\end_layout

\begin_layout Subsubsection
arbitration
\end_layout

\begin_layout Standard
Arbitration test tests the arbitration between two nodes in feature test
 environment.
 Two random frames with random identifiers are generated.
 Both are inserted into two nodes simultaneously (nearly simultaneously).
 Then the expected winner of arbitration process is calculated.
 Afterwards, frame transmission is observed and real loser of arbitration
 is determined.
 Real loser and expected loser are compared and any mismatch causes an error
 in the test.
 In order to test also special situations, several constraints were added
 to frame generation.
 Arbitration of BASE vs EXTENDED frames with the same BASE identifier, arbitrati
on of RTR vs non-RTR frames with the same identifier and collision during
 transmission of two identical identifiers are also tested in this test.
\end_layout

\begin_layout Subsubsection
fault_confinement
\end_layout

\begin_layout Standard
Fault confinement test generates random treshold of Error passive state.
 Then it sets the Error counters to random values and checks whether Fault
 confinement state has expected value.
 If not then an error is detected.
\end_layout

\begin_layout Subsubsection
interrupt
\end_layout

\begin_layout Standard
Interrupt generation on different events on CAN bus is generated.
 Firstly, transmit frame and receive frame interrupts are tested.
 One Node is always transmitter, other one is always a receiver.
 A frame is generated and transmitted.
 Test waits for interrupt and then reads interrupt vector from both nodes
 and checks whether expected bits are in logic 1.
 If not then an error is detected.
 Secondly, two conflicting frames (with the same identifier) are sent on
 CAN bus and an error interrupt is observed.
 If an interrupt is not generated or marked in interrupt vector then an
 error is detected.
 As third part, interrupt on filling RX Buffer and Data overrun is tested.
 RX buffer is cleared and its size is read.
 Then CAN frames are generated by other node and sent on the bus.
 Frames are not read from RX_Buffer.
 The number of words in RX_Buffer is calculated in test and test checks
 whether an interrupt is generated once the buffer is full.
 It also checks if interrupt is generated on the first received frame after
 buffer was filled.
 This frame is discarded since there is no space in RX_Buffer.
 Generation of bit-rate shift interrupt is tested in part 4.
 CAN FD frame is sent on the bus and two bit-rate shifts are observed during
 one frame.
 If interrupt vector does not have expected value error is detected.
 In the next part, two frames are generated on the bus.
 These two frames arbitrate.
 The test is aware of expected winner and checks on interrupt output and
 interrupt vector of the losing node.
 An error is detected as in previous parts of the test.
 In the last part of the test interrupt generation when reaching error warning
 limit or changing to error passive state is tested.
\end_layout

\begin_layout Subsubsection
invalid_configs
\end_layout

\begin_layout Standard
This test intends to test the behaviour of the controller when an invalid
 frame is inserted for transmission.
 Two situations are covered in this test: 1.
 CAN Frame (not FD frame) with BRS bit set to '1'.
 2.
 CAN FD Frame with RTR flag set to '1'.
 FD Frames have no RTR frames according to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

.
 In both cases, bits (BRS,RTR) should be ignored and standard frames should
 be transmitted (CAN Frame without any bit rate shifting, CAN FD frame without
 any RTR flag).
 After the transmission it is verified that proper frames were received
 in the other node.
 If any of invalid bits were recieved active (BRS='1' or RTR='1') error
 is detected.
\end_layout

\begin_layout Subsubsection
overload
\end_layout

\begin_layout Standard
Overload test intends to test transmission of two consecutive overload frames.
 Since CAN FD implementation is fast enough, it never transmits overload
 frame due to condition 1 from 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

 (Overload frame description).
 In this test transmission of overload flag due to condition 2 is verified.
 Random frame is generated and inserted for transmission.
 Afterwards, bus value is forced to be DOMINANT in first two bits of intermissio
n.
 Debug register is used to read out if Protocol control is in Overload state.
 If overload frame is not transmitted error in the test is detected.
\end_layout

\begin_layout Subsubsection
retr_limit
\end_layout

\begin_layout Standard
Retransmitt limit test intends to test the feature of limiting the number
 of frame retransmittions after detection of any error condition.
 Test generates random frame to be transmitted and inserts it into node
 1.
 The other node has 
\begin_inset Quotes eld
\end_inset

acknowledge forbidden
\begin_inset Quotes erd
\end_inset

 bit set in Control register.
 Random number retransmitt limit is generated and set in node 1.
 Transmitt error counter in node 1 is erased and frame transmittion is observed.
 Test waits for expected amount of retransmittions and afterwards checks
 the Transmitt error counter.
 If it does not have expected value error in the test is detected.
\end_layout

\begin_layout Subsubsection
rtr_pref
\end_layout

\begin_layout Standard
RTR Preffered behaviour test intends to test the special feature of CAN
 FD IP Core which can be set by RTRP bit in MODE register.
 CAN FD Specification does not clearly define what value of DLC should be
 sent within RTR frame.
 Since there is no data field present in RTR frame logically DLC should
 be 
\begin_inset Quotes eld
\end_inset

0000
\begin_inset Quotes erd
\end_inset

.
 However, it is not required by the protocol.
 CAN FD IP Core enables sending either inserted DLC or 
\begin_inset Quotes eld
\end_inset

0000
\begin_inset Quotes erd
\end_inset

 to be transmitted.
 Test first sets the behaviour of the Node to send zeroes only.
 Then it generates RTR frame with non-zero DLC, sends it and verifies that
 
\begin_inset Quotes eld
\end_inset

0000
\begin_inset Quotes erd
\end_inset

 was transmitted.The second part of the test sets the behaviour to send the
 actual DLC.
 Then RTR frame is generated and transmitted.
 Received DLC in the other node is checked towards the transmitted one.
 If any mismatch occurs error is detected.
\end_layout

\begin_layout Subsubsection
rx_status
\end_layout

\begin_layout Standard
RX Buffer status test aims to test proper functionality of RX Buffer from
 the user perspective.
 First RX Buffer size is read from the node and RX buffer is cleared.
 Then free memory and message count status is checked.
 If any unexpected value is present then error in the test is detected.
 Random frames are sent on the bus and received by Node 1.
 After each frame is sent a free memory in the buffer and message count
 are verified again.
 During the frame generation test sums the expected number of words in the
 buffer.
 Once the buffer should be full, after the transmission of next frame data
 overrun flag is checked and cleared.
 If at any point free memory in the buffer or data overrun flag is not matching
 error in the test is detected.
\end_layout

\begin_layout Subsubsection
soft_reset
\end_layout

\begin_layout Standard
Soft reset test writes logic 1 into the reset bit of MODE register.
 Afterwards, it reads back each readable register and compares the value
 with expected value from this document.
 If any mismatch occurs an error in the test is detected.
\end_layout

\begin_layout Subsubsection
spec_mode
\end_layout

\begin_layout Standard
Special modes test tests Self test mode (STM) , Listen only mode (LOM),
 Acceptance filter mode (AFM) and Acknowledge forbidden mode (ACF).
 In the first part, node 1 is set to STM and node 2 is set to STM and ACF.
 A frame is transmitted on the bus by node 1.
 It is verified that no acknowledge is sent by the node 2.
 It is also verified that frame was succesfully sent although no acknowledge
 was transmitted.
 This is achieved by comparing the transmit error counter before and after
 transmittion.
 In the second part node 1 is in STM and node 2 is in LOM.
 With this setting, the node 2 reroutes the dominant bits internally and
 node 1 does not expect the acknowledge.
 No acknowledge is observed on the bus but acknowledge is observed in the
 protocol control RX_data signal.
 If acknowledge or error frame would appear on the bus error in the test
 is detected.
 The third part of the test tests AFM mode.
 It is verified that frame is first stored in the received buffer with AFM
 turned off.
 Then the same frame is transmitted with AFM mode turned on, not matching
 the filters.
 It is verified that frame is not stored in the RX buffer.
\end_layout

\begin_layout Subsubsection
traf_measure
\end_layout

\begin_layout Standard
Traffic measurement first reads traffic counters from both nodes.
 Then it sends 1 to 5 frames on the bus and verifies that traffic counters
 were increased accordingly in both frames.
 If counters are not matching its previous value plus the amount of transmitted
 frames error in the test is detected.
\end_layout

\begin_layout Subsubsection
tran_delay
\end_layout

\begin_layout Standard
Transceiver delay test generates CAN FD frame with bit-rate shift.
 Then it sends the frame on the bus.
 After the transmission frame verifies the content of TRV_DELAY register.
 This register contains a value of transceiver delay measured during the
 EDL bit.
 In feature test environment transciever delay value is constant (200 ns).
 Considering the two synchronization chain flip-flops (10 ns clock) expected
 value is 22.
 If the content of TRV_DELAY is not matching the expected value, an error
 is detected.
\end_layout

\begin_layout Subsubsection
tx_arb_time_tran
\end_layout

\begin_layout Standard
TX arbitration and time transmission test tests the functionality of sending
 the frame in certain time.
 It also tests the selection between frames in both Transmit buffers.
 In the first part of the test timestamp is measured and a single frame
 is transmitted in random time from the acutal value of the timestamp.
 It is verified that a transmittion starts within first bit time from the
 expected value of the timestamp.
 In the second part, two frames are inserted to TXT Buffer 1 and TXT Buffer
 2.
 One of the frames has a higher time of transmission than the other one.
 Test waits until both frames are sent and verifies that the one with lower
 time of transmission was transmitted first.
 In the thrid part two frames with equal transmission time are inserted
 into both buffers.
 Frames differ only in the identifier.
 It is verified that frame with a decimally lower identifier is transmitted.
\end_layout

\begin_layout Section
4.7 Sanity test
\begin_inset CommandInset label
LatexCommand label
name "sec:4.7-Sanity-test"

\end_inset


\end_layout

\begin_layout Standard
Sanity test simulates the behaviour of CAN FD IP Core in the real environment.
 Sanity test consists of 4 controllers (it can be easily extended) connected
 on CAN Bus.
 Block diagram of sanity test is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sanity_diagram-1-1-1-1-1"

\end_inset

.
 Sanity test has following features:
\end_layout

\begin_layout Itemize
Transceiver delay modeling
\end_layout

\begin_layout Itemize
Real bus topology
\end_layout

\begin_layout Itemize
Oscillator tolerance simulation
\end_layout

\begin_layout Itemize
Noise generation
\end_layout

\begin_layout Itemize
Traffic emulation and data consitency evaluation
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/sanity_env.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sanity test block diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:sanity_diagram-1-1-1-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
4.7.1 Transciever delay
\begin_inset CommandInset label
LatexCommand label
name "subsec:4.7.1-Transciever-delay"

\end_inset


\end_layout

\begin_layout Standard
TX and RX ports of each CAN FD IP Core are connected to shift registers
 (signal 
\series bold
transceiver
\series default
).
 Shift registers simulate delay from TX port to RX port.
 This feature is especially important in fast Data bit-rates where bit time
 is shorter than transceiver delay.
 Note that half of the delay is realized in each shift register.
 In order to find out how to configure transceiver delays refer to 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:4.7.6-Sanity-test"

\end_inset


\end_layout

\begin_layout Subsection
4.7.2 Real bus topology
\begin_inset CommandInset label
LatexCommand label
name "subsec:4.7.2-Real-bus"

\end_inset


\end_layout

\begin_layout Standard
Topology of CAN Bus is implemented via shift registers, 
\series bold
bus_delay_sr
\series default
.
 Output of each transciever is connected to input of one shift register.
 Each shift register has capacity of 5000 entries and is shifted each 500
 ps.
 Assuming 1 ns equals approximately 20 cm of electric signal transport delay,
 bus lengths have resolution 10 cm.
 Delayed signal from each transciever is connected via AND gate to each
 reciever.
 Length of the delay is given by 
\series bold
Bus matrix
\series default
:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $M_{B}=\left[\begin{array}{cccc}
0 & d_{12} & d_{13} & d_{14}\\
d_{21} & 0 & d_{23} & d_{24}\\
d_{31} & d_{32} & 0 & d_{34}\\
d_{41} & d_{42} & d_{43} & 0
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $d_{ab}$
\end_inset

 is the delay from the transceiver 
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

 to the receiver 
\begin_inset Quotes eld
\end_inset

b
\begin_inset Quotes erd
\end_inset

.
 Each row of the matrix represents delay from one node to rest of the bus.
 In general case Bus matrix is n*n Matrix where N is the amount of CAN FD
 Controllers on the bus.
 Note that diagonal of the bus is equal to zero.
 It is assumed it takes infinitely short time from transceivers TX pin to
 its RX pin.
 The transciever delay is already modeled before the node is connected to
 the bus.
 Bus matrix is symetrical along its main diagonal.
 Delay from Node A to Node B is equal as Delay from Node B to Node A.
 Bus Matrix can describe every configuration of the Bus with N controllers.
 Bus topology in sanity tests does not simulate any analog effects, its
 purpose is to simulate only bus delay cause by bus cable.
 In order to simplify the Bus matrix calculation most common topologies
 are implemented in the sanity test.
\end_layout

\begin_layout Subsubsection
Bus
\end_layout

\begin_layout Standard
Bus topology is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:bus_topology-1"

\end_inset

.
 Bus matrix for Bus topology is:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $M_{B}=\left[\begin{array}{cccc}
0 & l_{1} & l_{1}+l_{2} & l_{1}+l_{2}+l_{3}\\
l_{1} & 0 & l_{2} & l_{2}+l_{3}\\
l_{1}+l_{2} & l_{2} & 0 & l_{3}\\
l_{1}+l_{2}+l_{3} & l_{2}+l_{3} & l_{3} & 0
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/bus_topology.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bus topology
\begin_inset CommandInset label
LatexCommand label
name "fig:bus_topology-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Star
\end_layout

\begin_layout Standard
Star topology is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:star_topology-1-1"

\end_inset

.
 Bus matrix for Star topology is :
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $M_{B}=\left[\begin{array}{cccc}
0 & l_{1}+l_{2} & l_{1}+l_{3} & l_{1}+l_{4}\\
l_{1}+l_{2} & 0 & l_{2}+l_{3} & l_{3}+l_{4}\\
l_{1}+l_{3} & l_{2}+l_{3} & 0 & l_{3}+l_{4}\\
l_{1}+l_{4} & l_{2}+l_{4} & l_{3}+l_{4} & 0
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/star_topology.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Star topology
\begin_inset CommandInset label
LatexCommand label
name "fig:star_topology-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Tree 
\end_layout

\begin_layout Standard
Tree topology is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tree_topology-1-1-1"

\end_inset

.
 Bus matrix for Tree topology is :
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $M_{B}=\left[\begin{array}{cccc}
0 & l_{1}+l_{2} & l_{1}+l_{3}+l_{5} & l_{1}+l_{4}+l_{5}\\
l_{1}+l_{2} & 0 & l_{2}+l_{3}+l_{5} & l_{2}+l_{4}+l_{5}\\
l_{1}+l_{3}+l_{5} & l_{2}+l_{3}+l_{5} & 0 & l_{3}+l_{4}\\
l_{1}+l_{4}+l_{5} & l_{2}+l_{4}+l_{5} & l_{3}+l_{4} & 0
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/tree_topology.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Tree topology
\begin_inset CommandInset label
LatexCommand label
name "fig:tree_topology-1-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Ring 
\end_layout

\begin_layout Standard
Ring topology is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ring_topology-1-1-1-1"

\end_inset

.
 Bus matrix for Ring topology is :
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $M_{B}=\left[\begin{array}{cccc}
0 & min(l_{1},l_{2}+l_{3}+l_{4}) & min(l_{1}+l_{2},l_{3}+l_{4}) & min(l_{4},l_{1}+l_{2}+l_{3})\\
min(l_{1},l_{2}+l_{3}+l_{4}) & 0 & min(l_{2},l_{1}+l_{3}+l_{4}) & min(l_{2}+l_{3},l_{1}+l_{4})\\
min(l_{1}+l_{2},l_{3}+l_{4}) & min(l_{2},l_{1}+l_{3}+l_{4}) & 0 & min(l_{3},l_{1}+l_{2}+l_{4})\\
min(l_{4},l_{1}+l_{2}+l_{3}) & min(l_{2}+l_{3},l_{1}+l_{4}) & min(l_{3},l_{1}+l_{2}+l_{4}) & 0
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Visio_generated/ring_topology.pdf
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ring topology
\begin_inset CommandInset label
LatexCommand label
name "fig:ring_topology-1-1-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Custom
\end_layout

\begin_layout Standard
In custom topolgy user/tester can set arbitrary values to Bus matrix.
 Bus matrix in custom topology is:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $M_{B}=\left[\begin{array}{cccc}
0 & l_{1} & l_{2} & l_{3}\\
l_{1} & 0 & l_{4} & l_{5}\\
l_{2} & l_{4} & 0 & l_{6}\\
l_{3} & l_{5} & l_{6} & 0
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Subsection
4.7.3 Oscillator tolerance
\begin_inset CommandInset label
LatexCommand label
name "subsec:4.7.3-Oscillator-tollerance"

\end_inset


\end_layout

\begin_layout Standard
Each controller in the sanity test environment has separate clock source
 with 100 Mhz frequency.
 Since oscillators in real devices are never absolutely exact, oscillator
 tolerance needs to be simulated.
 Each controllers clock has its own tolerance in ppm.
 Each tolerance is maximal possible tolerance, that means the clock is generated
 with this error.
 This approach covers the worst possible case that can happen.
 In order to properly simulate oscillator tolerance time resolution of Modelsim
 needs to be set to 
\begin_inset Quotes eld
\end_inset

fs
\begin_inset Quotes erd
\end_inset

.
 If set to 
\begin_inset Quotes eld
\end_inset

ps
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

ns
\begin_inset Quotes erd
\end_inset

 error in each clock cycle is lower than shortest time unit and will be
 rounded to zero and clk_sys of all controllers will have frequency exactly
 100 Mhz.
 During the simulation, it is possible to check whether oscillator tolerance
 is used properly.
 If two nodes have different oscillator tollerance then according input
 timestamp signals should gain different values after simulation runs for
 some time.
 In order to find out exactly how to configure oscillator tolerance refer
 to 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:4.7.6-Sanity-test"

\end_inset

.
\end_layout

\begin_layout Subsection
4.7.4 Noise generation
\begin_inset CommandInset label
LatexCommand label
name "subsec:4.7.4-Noise-generation"

\end_inset


\end_layout

\begin_layout Standard
In order to simulate glitches on the bus random binary nosie is generated
 on RX pins of each transceiver.
 When noise glitch is generated there is 50 % probability it will be received
 on the RX pin.
 Once the glitch is received (signal 
\begin_inset Quotes eld
\end_inset

noise_force
\begin_inset Quotes erd
\end_inset

) unit receives only the generated value of noise, thus it is possible to
 receive recessive bit when a dominant bit is on the bus.
 Glitches are not received at all nodes uniquely in order to distinguish
 between global (all nodes receive glitch) and local (only some nodes receive
 glitch) errors.
 Noise generator has two parameters : Noise width and Noise gap.
 Noise width is the length of generated glitch.
 Noise gap is time between two generated glitches.
 Both of these parameters have Gaussian distribution and it is possible
 to configure them over following parameters:
\end_layout

\begin_layout Description
nw_mean Mean value of noise width (in nanoseconds)
\end_layout

\begin_layout Description
nw_var Variance of noise width (in nanoseconds)
\end_layout

\begin_layout Description
ng_mean Mean value of noise gap (in nanoseconds)
\end_layout

\begin_layout Description
ng_var Variance of noise gap (in nanoseconds)
\end_layout

\begin_layout Standard
Each configuration parameter corresponds to VHDL signal.
 To find out exactly how to configure these parameters refer to 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:4.7.6-Sanity-test"

\end_inset

.
\end_layout

\begin_layout Subsection
4.7.5 Traffic emulation and data consitency evaluation
\begin_inset CommandInset label
LatexCommand label
name "subsec:4.7.5-Traffic-emulation"

\end_inset


\end_layout

\begin_layout Standard
Sanity test generates random CAN frames and inserts these frames to be transmitt
ed on the CAN bus.
 Each frame that is inserted into Node, is also inserted into according
 Transceive memory (tx_mems signal).
 The content of transceive memories monitors what was sent on the bus.
 Sanity test reads received frames from CAN Nodes and stores them into Recieve
 memories (rx_mems signal).
 After TX_memories are filled traffic generation is finished.
 In order for sanity test to pass the data consistency must be kept.
 That means that each frame which was transmitted by any node must be received
 by all other nodes! Contents of Transceive and Recieve memories is compared
 and data consistency is evaluated.
 One iteration of sanity test (with given configuration) can be summed up
 into following steps:
\end_layout

\begin_layout Enumerate
Generate frames and insert them to CAN Nodes.
\end_layout

\begin_layout Enumerate
Wait until all frames are received or unit turned error passive (indicates
 heavily disturbed bus).
\end_layout

\begin_layout Enumerate
Compare TX Memories and RX Memories contents for data consistency.
 If any frame was not properly received or dropped error is detected and
 test fails.
\end_layout

\begin_layout Subsection
4.7.6 Sanity test configuration
\begin_inset CommandInset label
LatexCommand label
name "subsec:4.7.6-Sanity-test"

\end_inset


\end_layout

\begin_layout Standard
Sanity test has its own configuration file which contains bus configurations
 for sanity test execution.
 This file is located in 
\series bold
sanity/sanity_config.tcl
\series default
.
 Each configuration can be iterated different amount of times.
 Each iteration consists of sequence from 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:4.7.5-Traffic-emulation"

\end_inset

 .
 Sanity configuration file is a TCL file.
 it defines list SANITY_CFG.
 Each element of the list represents one configuration and it is another
 list.
 Entries of the sublist have following meaning:
\end_layout

\begin_layout LyX-Code

\series bold
list
\series default
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code
<topology> <l1> ...
 <l6> 
\end_layout

\begin_layout LyX-Code
<td1> ...
 <td4> 
\end_layout

\begin_layout LyX-Code
<e1> ...
 <e4> 
\end_layout

\begin_layout LyX-Code
<nw_mean> <nw_var> <ng_mean> <ng_var> 
\end_layout

\begin_layout LyX-Code
<brp> <brp_fd> <prop> <ph1> <ph2> <sjw> <prop_fd> <ph1_fd> <ph2_fd> <sjw_fd>
\end_layout

\begin_layout LyX-Code
<desc> <iterations>
\end_layout

\end_deeper
\begin_layout Standard
Each element of the sublist have following meaning:
\end_layout

\begin_layout Description
topology Bus topology used in this configuration.
 Valid values are : 
\begin_inset Quotes eld
\end_inset

bus
\begin_inset Quotes erd
\end_inset

 , 
\begin_inset Quotes eld
\end_inset

star
\begin_inset Quotes erd
\end_inset

 , 
\begin_inset Quotes eld
\end_inset

tree
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

ring
\begin_inset Quotes erd
\end_inset

.
 For more information about topologies refer to 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:4.7.2-Real-bus"

\end_inset

.
\end_layout

\begin_layout Description
l1
\begin_inset space ~
\end_inset

...
\begin_inset space ~
\end_inset

l6 Length of the bus segments.
 These parameters have a different meaning for each topology.
 Please refer to 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:4.7.2-Real-bus"

\end_inset

 to find out the exact meaning of these parameters.
 Please note that if a parameter is not used in Bus Matrix then it can have
 an arbitrary value.
\end_layout

\begin_layout Description
td1
\begin_inset space ~
\end_inset

...
\begin_inset space ~
\end_inset

td4 Transciever delays of each node in multiples of 10 ns (e.g.
 transciever delay = 220 ns , then td(n)=22).
 Refer to 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:4.7.1-Transciever-delay"

\end_inset

.
\end_layout

\begin_layout Description
e1
\begin_inset space ~
\end_inset

...
\begin_inset space ~
\end_inset

e4 Oscillator errors (maximal tollerance) of each node in ppm.
 Refer to
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:4.7.3-Oscillator-tollerance"

\end_inset

.
\end_layout

\begin_layout Description
<nw_mean> Mean value of noise width (ns)
\end_layout

\begin_layout Description
<nw_var> Variance of noise width (ns)
\end_layout

\begin_layout Description
<ng_mean> Mean value of gap between two noise glitches (ns)
\end_layout

\begin_layout Description
<ng_var> Variance of between two noise glitches (ns)
\end_layout

\begin_layout Description
<brp> Baud rate prescaler in nominal bit time
\end_layout

\begin_layout Description
<brp_fd> Baud rate prescaler in data bit time
\end_layout

\begin_layout Description
<prop> Length of PROP segment in nominal bit time
\end_layout

\begin_layout Description
<ph1> Length of PH1 segment in nominal bit time
\end_layout

\begin_layout Description
<ph2> Length of PH2 segment in nominal bit time
\end_layout

\begin_layout Description
<sjw> Length of Synchronization jump width in nominal bit time
\end_layout

\begin_layout Description
<prop_fd> Length of PROP segment in data bit time
\end_layout

\begin_layout Description
<ph1_fd> Length of PH1 segment in data bit time
\end_layout

\begin_layout Description
<ph2_fd> Length of PH2 segment in data bit time
\end_layout

\begin_layout Description
<sjw_fd> Length of Synchronization jump width in data bit time
\end_layout

\begin_layout Description
<desc> Describtion of this configuration
\end_layout

\begin_layout Description
<iterations> Number of iterations this configuration should be repeated
\end_layout

\begin_layout Standard
Example of one configuration (one sub-list) is shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sanity_config_example-1-1-1-1-1"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Sanity_cfg.png
	lyxscale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sanity test example configuration
\begin_inset CommandInset label
LatexCommand label
name "fig:sanity_config_example-1-1-1-1-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
4.7.7 How to run sanity test?
\end_layout

\begin_layout Standard
Sanity test can be run from CANTest framework.
 Once the TCL configuration file contains valid configurations sanity simulation
 can be opened (most important waveforms are also added) via the following
 command:
\end_layout

\begin_layout LyX-Code

\series bold
test sanity start
\end_layout

\begin_layout Standard
Since sanity test can run several hours or days simulation waveform file
 in Modelsim project directory can reach extreme sizes (from 10s up to 100s
 of GBs).
 In order to avoid this situation sanity test can be started in 
\begin_inset Quotes eld
\end_inset

silent
\begin_inset Quotes erd
\end_inset

 mode.
 In silent mode only the most important waveforms are added.
 Sanity test can be started in silent mode via the following command:
\end_layout

\begin_layout LyX-Code

\series bold
test sanity start silent
\end_layout

\begin_layout Standard
Afterwards,test execution is started with command:
\end_layout

\begin_layout LyX-Code

\series bold
test sanity run
\end_layout

\begin_layout Standard
After sanity test runs with all configurations it prints out the results
 of each configuration run to the command line.
\end_layout

\begin_layout Chapter
6.
 Synthesis
\end_layout

\begin_layout Standard
CAN FD IP Core is synthesized as part of system developed in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-20"
literal "true"

\end_inset

.
 ALTERA FPGA EP4CE55F23C8N with 55856 LUTs is used as target device.
 Synthesis is performed in Quartus II v 9.1 software.
 Design size and performance depends on configuration constants (size of
 buffers and event logger).
 Synthesis was performed several times and various results were obtained.
 Settings for balanced Synthesis and Fitting were used.
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Design-size-in"

\end_inset

 shows these results.
 Data shown in the table exclude the rest of the design from 
\begin_inset CommandInset citation
LatexCommand cite
key "key-20"
literal "true"

\end_inset

 and show only resources used by CAN FD IP Core.
 For timing analysis TimeQuest Timing analyzer is used.
 Note that results of Timing analysis which are shown in last column use
 85 °C Slow timing model (most critical model).
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="20" columns="7">
<features tabularvalignment="top">
<column alignment="center" valignment="middle" width="1.8cm">
<column alignment="center" valignment="middle" width="1.8cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2.6cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="1.8cm">
<column alignment="center" valignment="middle" width="2cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RX Buffer size [words]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Logger size [events]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TX Buffer size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LC Combinationals 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LC Registers
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Memory bits
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximal frequency [Mhz]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basic size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6738
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2683
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2048
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
105.12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basic size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6907
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2751
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4096
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
112.65
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basic size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7391
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2883
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8192
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
101.88
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
256
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basic size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9298
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3143
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16384
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
101.85
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
512
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basic size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9375
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3659
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32768
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
97.62
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8340
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4475
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2048
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
106.38
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8500
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4543
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4096
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
105.95
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8885
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4675
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8192
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
101.9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
256
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9571
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4953
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16384
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
103.78
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
512
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0(unused)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10968
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5451
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32768
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
82.01
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8718
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4677
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2520
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
97.63
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8767
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4688
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2992
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
97.83
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8912
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4742
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5824
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
89.63
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8894
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4745
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4680
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
99.95
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8914
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4756
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5040
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
95.17
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9072
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4810
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7872
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
89.45
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9282
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4877
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8864
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
87.99
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9307
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4888
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9136
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FD size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9456
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4942
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11968
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
86.55
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design size in FPGA
\begin_inset CommandInset label
LatexCommand label
name "tab:Design-size-in"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
7.
 FPGA Verification
\end_layout

\begin_layout Standard
The functionality of CAN FD IP Core is verified in real hardware.
 The device developed in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-20"
literal "true"

\end_inset

 is used for this purpose.
 CAN FD IP Core is synthesized into FPGA and accessed over EMIF interface
 from memory of Texas Insruments automotive MCU (ARM) via driver described
 in previous chapter.
 TJA1041 is used as transceiver of physical layer.
\end_layout

\begin_layout Standard
The main purpose of this testing is to reveal errors which were not covered
 by CANTest framework.
 In order to achieve this reference controllers are used for communication.
 Without reference controller there is always a chance that error will be
 compensated by receiving node thus error remains undetected.
\end_layout

\begin_layout Standard
In the first part, reference controller CANoe program with CAN card was
 used.
 Since CANoe program did not support the FD interface it was used only for
 CAN frames.
 Both transmission and reception are verified.
 Basic Identifiers, Extended Identifiers, RTR frames and Arbitration mechanism
 were verified via logic analyzer.
 Transceived and received data were compared to make sure data consistency
 was not corrupted.
 1 Mbit/s bit-rate was used.
\end_layout

\begin_layout Standard
In the second part CAN FD frames were verified.
 Atmel SAMV71 Ultra development board (
\begin_inset CommandInset citation
LatexCommand cite
key "key-13"
literal "true"

\end_inset

) was used as reference controller.
 Both transmission and reception were verified.
 Maximum payload length of 64 bytes was used.
 Several Bit-rates were tested during this testing:
\end_layout

\begin_layout Itemize
250 kbit/s Nominal bit-rate, 1 Mbit/s Data bit-rate
\end_layout

\begin_layout Itemize
500 kbit/s Nominal bit-rate, 2 Mbit/s Data bit-rate
\end_layout

\begin_layout Itemize
1 Mbit/s Nominal bit-rate, 2 Mbit/s Data bit-rate
\end_layout

\begin_layout Standard
Faster bit rates were not verified in real hardware since used transceivers
 did not support bit-rates over 2 Mbit/s (actually TJA1041 supports only
 1 Mbit/s but works fine for 2 Mbit/s).
 Basic identifier, Extended identifiers, Bit-rate shit, no Bit-rate shift
 were verified as part of this test.
 The test setup is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:test_setup"

\end_inset

.
 An example of frame sampled by logic analyzer is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:frame_example"

\end_inset

.
 Note that SAMV71 MCU from Atmel contains only non-ISO version of CAN FD
 protocol (it was released before the CRC issue appeared), thus the testing
 covers only non-ISO FD protocol.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/0p5MB_2MB.png
	lyxscale 20
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sampled 64 byte frame
\begin_inset CommandInset label
LatexCommand label
name "fig:frame_example"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename ../pics/Test_setup/IMG_20160902_174031.jpg
	lyxscale 20
	scale 19
	rotateAngle 270

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Test setup
\begin_inset CommandInset label
LatexCommand label
name "fig:test_setup"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
7.
 Linux driver
\end_layout

\begin_layout Standard
TODO by Martin Jerabek.
\end_layout

\begin_layout Chapter
8.
 Known issues and future work
\end_layout

\begin_layout Standard
CAN FD IP Core has many features which are not required by CAN FD specification.
 However there is still room for improvement.
 Following list names few of the possible improvements:
\end_layout

\begin_layout Itemize
Implement automatic baud rate detection, either as part of CAN Core or separate
 module.
 Once the unit would be turned on, it would measure bus timing (e.g.
 over several frames) and provide the results, or even set the bus timing
 registers.
\end_layout

\begin_layout Itemize
Implement additional state machine which would decide about usage of Data
 bit rate based on relative error rate of two bit rates.
\end_layout

\begin_layout Itemize
Optimize the 
\begin_inset Quotes eld
\end_inset

tranBuffer
\begin_inset Quotes erd
\end_inset

 and TXT_Buffer to be synthesized into RAM elements, not to LUTs.
\end_layout

\begin_layout Itemize
Add hard synchronisation and resynchronisation part into Prescaler unit
 test
\end_layout

\begin_layout Itemize
Implement event logger feature test
\end_layout

\begin_layout Itemize
Implement error detection feature test
\end_layout

\begin_layout Chapter
Appendix A - Driving bus signals
\begin_inset CommandInset label
LatexCommand label
name "chap:Appendix-A--"

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="34" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Destination unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0-5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_tq_nbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time quantum length, Nominal bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_tq_dbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time quantum length, Nominal bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_prs_nbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Propagation segment length , Nominal bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18-23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_ph1_nbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase 1 segment length, Nominal bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24-29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_ph2_nbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase 2 segment length, Nominal bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30-33
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_prs_dbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Propagation segment length , Data bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
34-37
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_ph1_dbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase 1 segment length, Data bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
38-41
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_ph2_dbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase 2 segment length, Data bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
42-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_sjw_nbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Synchronisation jump width, Nominal bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
46-49
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_sjw_dbt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prescaler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Synchronisation jump width, Data bit time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
50-60
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
61-80
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
81-109
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_A_mask
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mask for filter A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
110-113
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_A_ctrl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allowed frames for filter A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
114-142
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_A_bits
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bits to compare for filter A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
171-143
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_B_mask
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mask for filter B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
175-172
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_B_ctrl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allowed frames for filter B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
204-176
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_B_bits
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bits to compare for filter B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
205-233
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_C_mask
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mask for filter C
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
234-237
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_C_ctrl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allowed frames for filter C
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
238-266
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_C_bits
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bits to compare for filter C
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
267-270
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_ran_ctrl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allowed frames for range filter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
271-299
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_ran_lo_th
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Low range treshold for range filter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
300-328
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_ran_hi_th
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
High range treshold for range filter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
329
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_filter_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message filter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable applying message filters.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
330-349
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
350
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_erase_rx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RX Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erase recieved buffer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
351
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
352
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_read_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RX Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Move to next word in recieve buffer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
353
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_clr_ovr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RX Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clear Overrun flag
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
351-355
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
356
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_erase_txt1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TXT Buffer 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erase message in TXT 1 buffer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
357
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_store_txt1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TXT Buffer 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Store message in registers into TXT 1 buffer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="45" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Destination unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
358
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_erase_txt2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TXT Buffer 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erase message in TXT 2 buffer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
359
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_store_txt2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TXT Buffer 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Store message in registers into TXT2 buffer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
360
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
361
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_allow_txt1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TXT Arbitrator
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allow sending messages from TXT1 buffer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
362
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_allow_txt2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TXT Arbitrator
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allow sending messages from TXT2 buffer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
363-365
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
366
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_write_tx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TX Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
367
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_write_rx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TX Buffer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
368-371
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
372
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_sam
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bus Synchron.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tripple sampling for slow speeds
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
373-375
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
376
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_bus_err_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable Bus error interrupt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
377
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_arb_lst_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable Arbitration lost interrupt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
378
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_err_pas_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable Fault confinement state changed interrupt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
379
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_wake_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
380
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_dov_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable Data overrun interrupt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
381
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_err_war_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable Error warning limit reached interrupt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
382
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_tx_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable sucessfull transcieve interrupt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
383
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_rx_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable logging finished interrupt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
384
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_log_fin_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable sucessfull recieve interrupt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
385
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_brs_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable bit rate shift interrutpt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
386
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_rx_full_int_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable interrupt when recieve buffer is full
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
387
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_int_vect_erase
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interrupt manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command to erase interrupt vector
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
388-399
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400-407
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_ewl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fault confinement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error warning limit (by standard 96)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
408-415
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_erp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fault confinement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error passive treshold (by standard 128)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
424-416
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_ctr_val
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fault confinement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value for presetting error counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
428-425
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_ctr_sel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fault confinement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Control signals, which counters to preset
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
459-429
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
31
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
460
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_CAN_fd_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enable recieve of CAN FD frames
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
461
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_rtr_pref
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RTR preffered behaviour
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
462-464
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
465
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_retr_lim_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Retransmittion limit of errornous frames is enabled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
466-469
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_retr_th
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Retransmittion treshold
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
470
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_bus_mon_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bus monitoring mode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
471
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_self_test_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Self Test mode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
472
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_abort_tran
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Immediately abort actual transmittion
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
473
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_set_rx_ctr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAN Core
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preset sucessfully recieved messages counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
474
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_set_tx_ctr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAN Core
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Preset sucessfully transcieved messages counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
475-506
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_set_ctr_val
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAN Core
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value for presetting RX and TX counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
507
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_ack_forb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Acknowledge sending is forbidden
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
508
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_int_loopback_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAN Core
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal loopback is enabled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
509-519
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
520-551
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_config_data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal is not used
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="46" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Destination unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
552
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_sof
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on Start of frame
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
553
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_arb_lost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on Arbitration lost
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
554
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_rec_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on sucesfull recieve
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
555
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_tran_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on sucesfull transcieve
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
556
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_ovl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on overload frame transcieved
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
557
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on error appeared
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
558
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_brs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on bit rate shifted
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
559
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_user_write
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger by logic 1 in this signal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
560
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_arb_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on Arbitration field start
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
561
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_contr_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on Control field start
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
562
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_data_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on Data field start
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
563
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_crc_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on CRC field start
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
564
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_ack_rec
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on acknowledge recieved
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
565
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_ack_n_rec
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on acknowledge was not recieved
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
566
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_ewl_reached
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on error warning limit was reached
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
567
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_erp_changed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on error passive state changed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
568
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_tran_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on transmittion started
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
569
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_trig_rec_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trigger on reception started
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
570-579
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
580
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_sof
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture Start of Frame
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
581
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_arb_lost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture Arbitration lost
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
582
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_rec_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture that message was recieved valid
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
583
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_tran_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture that message was transcieved valid
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
584
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_ovl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when overload frame is transmitted
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
585
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
crv_cap_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when error appears
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
586
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_brs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when bit rate is shifted
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
587
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_arb_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when Arbitration field starts
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
588
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_contr_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when Control field starts
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
589
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_data_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when Data field starts
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
590
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_crc_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when CRC field starts
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
591
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_ack_rec
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when Acknowledge was recieved
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
592
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_ack_n_rec
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when Acknowledge was not recieved
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
593
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_ewl_reached
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when Error warning limit was reached
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
594
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_erp_changed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when Fault confinement state has changed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
595
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_tran_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when Transmittion starts
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
596
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_sap_rec_start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture when reception starts
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
597
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_sync_edge
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture that Synchronisation edge appeared
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
598
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_stuffed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture that stuff bit was inserted
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
599
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_destuffed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture that bit was destuffed from stream
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
600
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_cap_ovr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capture that data overrun appeared
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
601-609
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
610
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_log_cmd_str
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command to start capturing
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
611
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_log_cmd_abt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command to abort capturing
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
612
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_log_cmd_up
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command to move read pointer up
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
613
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
drv_log_cmd_down
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event logger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command to move read pointer down
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Chapter
Appendix B - Status bus signals
\begin_inset CommandInset label
LatexCommand label
name "chap:Appendix-B--"

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="31" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_OP_State
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operation state 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2-5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_PC_State
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol Control state 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_arb_lost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arbitration was lost
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_set_trans
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit is set as transciever from next clock
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_set_rec
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit is set as reciever from next clock
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_is_idle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit is idle
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_sp_control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sample point control
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_ssp_reset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Secondary sample point reset
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_trv_delay_calib
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transciever delay calibration enabled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14-15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_sync_control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Synchronisation control
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_data_tx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transcieved data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_data_rx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieved data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_bs_enable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit Stuffing enable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_fixed_stuff
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fixed stuffing method is applied
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_data_halt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit was stuffed, transmitting should be halted
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21-23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_bs_length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit stuffing length
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_stuff_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stuff Error appeared
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_destuffed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit is destufffed, shouldntbe recorded by Protocol control
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
26
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_bds_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit destuffing is enabled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_stuff_error_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit Stuffing error detection enabled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_fixed_destuff
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fixed destuffing method should be used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29-31
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_bds_length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit destuffing length
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32-60
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_ident
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transcieved identifier
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
61-64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_dlc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transcieved dlc
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
65
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_is_rtr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transcieved frame is rtr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
66
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_frame_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transcieved frame type (normal or FD frame)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
67
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_ident_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transcieved identifier type (basic or extended)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
68
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_data_ack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Acknowledge for TXT buffers, TX data are stored in internal buffer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
69
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_brs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transcieved message should shift bitrate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
70
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_frame_store
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command to store input frame for transcieve
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="37" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
71-79
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tx_counter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TX error counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
80
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
81-89
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rx_counter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RX error counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
90-98
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_error_counter_norm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error counter for errors appeared in nominal bit rate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
99-107
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_error_counter_fd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error counter for errors appeared in data bit rate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
108-109
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_error_state
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fault confinement state
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
110
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_form_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Form error appeared
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
111
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_crc_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CRC error appeared
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
112
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_ack_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Acknowledge error appeared
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
113
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_unknown_state_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Protocol control is in undefined state
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
114
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_bit_stuff_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit or Stuff error appeared
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
115
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_first_bit_after
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
116
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message was recieved valid
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
117
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Message was transcieved valid
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
118
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_const7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
119
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_const14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
120
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_transm_error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Signal not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
121-149
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_ident_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieved identifier
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
150-153
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_dlc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieved data length code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
154
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_is_rtr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieved frame is rtr
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
155
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_frame_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieved frame type (normal or FD)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
156
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_ident_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieved identifier type (basic or extended) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
157
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_brs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieved frame with bit rate shift
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
158-178
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_crc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieved CRC value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
179
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_esi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieverd Error state indicator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
180
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_crc_ena
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CRC calculation is enabled
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
181
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tran_trig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transcieve trigger (in sync segment)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
182
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rec_trig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recieve trigger (in sample point)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
183-187
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_alc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arbitration lost capture
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
188-219
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_rx_ctr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sucesfully recieved message counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
220-251
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_tx_ctr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sucesfully transcieved message counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
252
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_erp_changed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error passive state has changed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
253
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_ewl_reached
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error warning limit was reached 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
254
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_err_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error is valid
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
255
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_ack_recieved_out
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Acknowledge was recieved
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
256
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stat_bit_error_valid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit Error appeared
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"
literal "true"

\end_inset

CAN with Flexible Data-Rate Specification v 1.0, Robert Bosch GmbH, April
 2012
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"
literal "true"

\end_inset

CAN 2.0 Protocol standard, Robert Bosch GmbH, Rev 3.0
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"
literal "true"

\end_inset

Controller Area Network - Basics, protocols, chips and applications, Prof.
 Dr.-Ing.
 K.
 Etschberger, 2001
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-4"
literal "true"

\end_inset

CRC for CAN with flexible data rate (CAN FD) - Whitepaper
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-20"
literal "true"

\end_inset

Software for Test Platform, DataSheet, Ille Ondrej, Czech Technical University,
 July 2015
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-21"
literal "true"

\end_inset

Implementation of unconventional CAN controller in VHDL, Diploma Thesis,
 Dušan Hamza, Czech technical university, 2013
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-5"
literal "true"

\end_inset

Robustness of a CAN FD Bus System – About Oscillator Tolerance and Edge
 Deviations, Dr.
 Arthur Mutter, Robert Bosch GmbH, 2013
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-6"
literal "true"

\end_inset

SJA1000 Standalone CAN Controller,Philips Semiconductors, January 2000
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-7"
literal "true"

\end_inset

TJA1041 High speed CAN transceiver Rev.
 06, December 2007, NXP Semiconductors
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-8"
literal "true"

\end_inset

ModelSim Advanced verification and debugging SE Command Reference, Mentor
 Graphics, v 6.0 November 2004
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-9"
literal "true"

\end_inset

VHDL guidlines for synthesis, Siemens semiconductor group
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-10"
literal "true"

\end_inset

FPGA prakticky - Realizace číslicových systémů pro hradlová pole, Jakub
 Šťastný, BEN Technická literatura 2011
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-11"
literal "true"

\end_inset

Číslicové systémy a jazyk VHDL , Jiří Pinker, Martin Poupa, BEN Technická
 literatura 2006
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-12"
literal "true"

\end_inset

 Understanding Metastability in FPGAs, ALTERA
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-13"
literal "true"

\end_inset

SAM V71, SMART ARM-based Flash MCU, Preeliminary datasheet, Atmel, February
 2015
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-14"
literal "true"

\end_inset

VHDL Guides , Dr.
 Jayram, Moorkanikara Nageswaran, Department of Computer Science University
 of California, http://www.ics.uci.edu/~jmoorkan/vhdlref/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-15"
literal "true"

\end_inset

Avalon Interface Specifications,ALTERA March 2015
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-16"
literal "true"

\end_inset

Methods for Testing the FlexRay Start-up Mechanism, Diploma thesis, Martin
 Paták ,Czech Technical University in Prague, 2012
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-17"
literal "true"

\end_inset

TimeQuest Timing Analyzer - Quick Start Tutorial, ALTERA, December 2009
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-19"
literal "true"

\end_inset

Implementing Inferred RAM, http://quartushelp.altera.com/14.0/mergedProjects/hdl/vh
dl/vhdl_pro_ram_inferred.htm
\end_layout

\end_body
\end_document
